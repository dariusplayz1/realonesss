--[[
  Private library owned by dadu
  last modified: 10/07/2024
  
  will use in the next project [destiny] or [nomercy]

  To do list:

    - esp preview
    - tool tips
    - inv viewer

]]

-- // Variables
local ws = game:GetService("Workspace")
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local hs = game:GetService("HttpService")
local cas = game:GetService("ContextActionService")
local plrs = game:GetService("Players")
local stats = game:GetService("Stats")
local core = game:GetService("CoreGui")
local dt = DateTime.now()
--
local localplayer = plrs.LocalPlayer
--
local mouse = localplayer:GetMouse()
--
local Remove = table.remove
local Unpack = table.unpack
local Find = table.find
-- UI Variables
local library = {
    font = nil,
    objects = {},
    hidden = {},
    connections = {},
    pointers = {},
    began = {},
    ended = {},
    changed = {},
    colors = {},
    hovers = {},
    Relations = {},
    folders = {
        main = "Destiny",
        assets = "Destiny/Images",
        configs = "Destiny/Configs"
    },
    shared = {
        initialized = false,
        fps = 0,
        ping = 0
    }
}
-- font
do 
    function Register_Font(Name, Weight, Style, Asset)
        if not isfile(Asset.Id) then
            writefile(Asset.Id, Asset.Font)
        end
        if isfile(Name .. ".font") then
            delfile(Name .. ".font")
        end
        local Data = {
            name = Name,
            faces = {
                {
                    name = "Regular",
                    weight = Weight,
                    style = Style,
                    assetId = getcustomasset(Asset.Id),
                },
            },
        }
        writefile(Name .. ".font", game:GetService("HttpService"):JSONEncode(Data))
        return getcustomasset(Name .. ".font");
    end
    
    local Minecrafia = Register_Font("Minecraftia", 200, "normal", {
        Id = "Minecraftia-Regular.ttf",
        Font = crypt.base64.decode(
            ""
        ),
    })

    library.font = Font.new(Minecrafia);
end
--
local utility = {
    Keyboard = {
        Letters = {
            "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
        },
        Modifiers = {
            ["`"] = "~", ["1"] = "!", ["2"] = "@", ["3"] = "#", ["4"] = "$", ["5"] = "%", ["6"] = "^", ["7"] = "&", ["8"] = "*", ["9"] = "(",
            ["0"] = ")", ["-"] = "_", ["="] = "+", ["["] = "{", ["]"] = "}", ["\\"] = "|", [";"] = ":", ["'"] = '"', [","] = "<", ["."] = ".",
            ["/"] = "?"
        },
        InputNames = {
            One = "1", Two = "2", Three = "3", Four = "4", Five = "5", Six = "6", Seven = "7", Eight = "8", Nine = "9", Zero = "0",
            LeftBracket = "[", RightBracket = "]", Semicolon = ";", BackSlash = "\\", Slash = "/", Minus = "-", Equals = "=", Return = "Enter",
            Backquote = "`", CapsLock = "Caps", LeftShift = "LShift", RightShift = "RShift", LeftControl = "LCtrl", RightControl = "RCtrl",
            LeftAlt = "LAlt", RightAlt = "RAlt", Backspace = "Back", Plus = "+", PageUp = "PgUp", PageDown = "PgDown", Delete = "Del",
            Insert = "Ins", NumLock = "NumL", Comma = ",", Period = "."
        }
    }
}
--
local pages = {}
local sections = {}
--

-- // utility Functions
do
    --
    function utility:Connection(connectionType, connectionCallback)
        local connection = connectionType:Connect(connectionCallback)
        library.connections[#library.connections + 1] = connection
        
        return connection
    end
    --
    function utility:Disconnect(connection)
        for i,v in pairs(library.connections) do
            if v == connection then
                library.connections[i] = nil
                v:Disconnect()
            end
        end
    end
    --

    function utility:WrapText(Text, Size)
        local Max = (Size / 7)
        --
        return Text:sub(0, Max)
    end
    --
    function utility:convertAbsoluteToScale(frame,containerr)
        local container = containerr
        
        local containerAbsPos = container.AbsolutePosition
        local containerAbsSize = container.AbsoluteSize
        
        local frameAbsPos = frame.AbsolutePosition
        
        local frameRelativePos = frameAbsPos - containerAbsPos
    
        return UDim2.fromScale(frameRelativePos.X / containerAbsSize.X, frameRelativePos.Y / containerAbsSize.Y)
    end
    --
    function utility:MouseLocation()
        return uis:GetMouseLocation()
    end
    --
    function utility:GetScreenSize()
        return ws.CurrentCamera.ViewportSize
    end
    --
    function utility:Lerp(instance, instanceTo, instanceTime)
        local currentTime = 0
        local currentIndex = {}
        local connection
        --
        for i,v in pairs(instanceTo) do
            currentIndex[i] = instance[i]
        end
        --
        local function lerp()
            for i,v in pairs(instanceTo) do
                instance[i] = ((v - currentIndex[i]) * currentTime / instanceTime) + currentIndex[i]
            end
        end
        --
        connection = utility:Connection(rs.RenderStepped, function(delta)
            if currentTime < instanceTime then
                currentTime = currentTime + delta
                lerp()
            else
                connection:Disconnect()
            end
        end)
    end
    --
    function utility:InputToString(Input)
        if Input then
            local String = (tostring(Input) .. "."):gsub("%.", ",")
            local Count = 0
            --
            for Value in String:gmatch("(.-),") do
                Count = Count + 1
                --
                if Count == 3 then
                    String = Value:gsub("Keypad", "")
                end
            end
            --
            if String == "Unknown" or Input.Value == 27 then
                return "None"
	    end
            if utility.Keyboard.InputNames[String] then
                String = utility.Keyboard.InputNames[String]
            end
            --
            return String
        else
            return "None"
        end
    end

end

-- // Library Functions

do

    library.__index = library
	pages.__index = pages
	sections.__index = sections
    --
    function library:Notification(info)
    end
    --
    function library:New(info)

        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title or "UI Title"
        local size = info.size or info.Size or 576
        local accent = info.accent or info.Accent or info.color or info.Color or Color3.fromRGB(170, 85, 235)
        local callback = info.callback or info.Callback or info.callBack or info.CallBack or function() end

         --
         local window = {pages = {},tabsframe = nil,realtabs = nil, init = false, isVisible = false, callback = callback, uibind = Enum.KeyCode.Z, wminfo = "  Destiny $GAME || UID : $UID || Ping : $PING || Fps : $FPS || Config = $CFG", currentPage = nil, fading = false, dragging = false, currentContent = {frame = nil, dropdown = nil, multibox = nil, colorpicker = nil, keybind = nil, textbox = nil}}
         --

        --// Rendering

        local simp = Instance.new("ScreenGui")
        local Back = Instance.new("Frame")
        library.objects[Back] = true
        local Accent = Instance.new("Frame")
        library.objects[Accent] = true
        local title = Instance.new("TextLabel")
        library.objects[title] = true
        local TabButtons = Instance.new("Folder")
        local BackFrame = Instance.new("Frame")
        local UIListLayout = Instance.new("UIListLayout")
        local RealTabs = Instance.new("Folder")
        local BackEffect = Instance.new("ImageLabel")
        library.objects[BackEffect] = true
        local UIGradient = Instance.new("UIGradient")
        local TextLabel = Instance.new("TextLabel")
        local valsat = Instance.new("ImageLabel")
        local dot = Instance.new("Frame")
        local UICorner = Instance.new("UICorner")
        local Trigger = Instance.new("TextButton")
        local colorhue = Instance.new("ImageLabel")
        local color = Instance.new("Frame")
        local Trigger_2 = Instance.new("TextButton")
        local transval = Instance.new("ImageLabel")
        local trans = Instance.new("Frame")
        local ImageLabel = Instance.new("ImageLabel")
        local UIGradient_2 = Instance.new("UIGradient")
        local Trigger_3 = Instance.new("TextButton")
        local Keybind = Instance.new("Frame")
        local UIGradient_3 = Instance.new("UIGradient")
        local toggle = Instance.new("TextButton")
        local UIListLayout_2 = Instance.new("UIListLayout")
        local hold = Instance.new("TextButton")
        local UIPadding = Instance.new("UIPadding")
        local Drag = Instance.new("TextButton")
        library.objects[Drag] = true

        --Properties:

        simp.Name = "simp"
        simp.Parent = core
        simp.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        Back.Name = "Back"
        Back.Parent = simp
        Back.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
        Back.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Back.BorderSizePixel = 2
        Back.Position = UDim2.new(0.300578028, 0, 0.141439199, 0)
        Back.Size = UDim2.new(0, 535, 0, size)
        Back.BackgroundTransparency = library.shared.initialized and 0 or 1

        local str = Instance.new("UIStroke",Back)
        str.Thickness = 1
        str.Color = Color3.fromRGB(48,48,48)
        str.Enabled = true

        Accent.Name = "Accent"
        Accent.Parent = Back
        Accent.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
        Accent.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Accent.Position = UDim2.new(0.0241699219, 0, 0.055555556, -2)
        Accent.Size = UDim2.new(0, 510, 0, 2)
        Accent.BackgroundTransparency = library.shared.initialized and 0 or 1

        title.Name = "title"
        title.Parent = Back
        title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        title.BackgroundTransparency = 1.000
        title.BorderColor3 = Color3.fromRGB(0, 0, 0)
        title.BorderSizePixel = 0
        title.Position = UDim2.new(0.0241699219, 0, 0.00347222225, 2)
        title.Size = UDim2.new(0, 308, 0, 32)
        title.FontFace = library.font
        title.RichText = true
        title.Text = name
        title.TextColor3 = Color3.fromRGB(170, 85, 235)
        title.TextSize = 9
        title.TextXAlignment = Enum.TextXAlignment.Left
        title.TextTransparency = library.shared.initialized and 0 or 1

        TabButtons.Name = "TabButtons"
        TabButtons.Parent = Back

        BackFrame.Name = "BackFrame"
        BackFrame.Parent = TabButtons
        BackFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        BackFrame.BackgroundTransparency = 1.000
        BackFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        BackFrame.BorderSizePixel = 0
        BackFrame.Position = UDim2.new(0.0241699219, 0, 0.0729166642, 0)
        BackFrame.Size = UDim2.new(0, 509, 0, 30)

        
        window.tabsframe = BackFrame
        window.realtabs = RealTabs

        local UIPadding123 = Instance.new("UIPadding")
        UIPadding123.Parent = window.tabsframe
        UIPadding123.PaddingLeft = UDim.new(-0.00300000003, 0)

        UIListLayout.Parent = BackFrame
        UIListLayout.FillDirection = Enum.FillDirection.Horizontal
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0.00499999989, 0)

        RealTabs.Name = "RealTabs"
        RealTabs.Parent = Back

        BackEffect.Name = "BackEffect"
        BackEffect.Parent = Back
        BackEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        BackEffect.BackgroundTransparency = 1.000
        BackEffect.BorderColor3 = Color3.fromRGB(0, 0, 0)
        BackEffect.BorderSizePixel = 0
        BackEffect.Position = UDim2.new(-0.0598129705, 0, -0.0572916679, 0)
        BackEffect.Size = UDim2.new(0, 600, 0, size + 76)
        BackEffect.ZIndex = -1
        BackEffect.Image = "http://www.roblox.com/asset/?id=4996891970"
        BackEffect.ImageColor3 = Color3.fromRGB(170, 85, 235)
        BackEffect.ImageTransparency = library.shared.initialized and 0 or 1

        Drag.Name = "Drag"
        Drag.Parent = Back
        Drag.Visible = library.shared.initialized and 1 or 0
        Drag.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Drag.BackgroundTransparency = 1.000
        Drag.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Drag.BorderSizePixel = 0
        Drag.Size = UDim2.new(0, 535, 0, 34)
        Drag.ZIndex = 59
        Drag.Font = Enum.Font.SourceSans
        Drag.Text = ""
        Drag.TextColor3 = Color3.fromRGB(0, 0, 0)
        Drag.TextSize = 9.000

        --// library frame funcs
        function window:SetName(Name)
            title.Text = Name
        end
        --
        function window:GetConfig()
            local config = {}
            --
            for i,v in pairs(library.pointers) do
                if typeof(v:Get()) == "table" and v:Get().Transparency then
                    local hue, sat, val = v:Get().Color:ToHSV()
                    config[i] = {Color = {hue, sat, val}, Transparency = v:Get().Transparency}
                else
                    config[i] = v:Get()
                end
            end
            --
            return game:GetService("HttpService"):JSONEncode(config)
        end
        --
        function window:LoadConfig(config)
            local config = hs:JSONDecode(config)
            --
            for i,v in pairs(config) do
                if library.pointers[i] then
                    library.pointers[i]:Set(v)
                end
            end
        end
        --
        function window:Watermark(info)
            window.watermark = {visible = false}
            --
            local info = info or {}
            local watermark_name = info.name or info.Name or info.title or info.Title or window.wminfo
            --
            local watermark = Instance.new("Frame")
            local Frame = Instance.new("Frame")
            local Accent = Instance.new("Frame")
            local Title2 = Instance.new("TextLabel")
            
            --Properties:
            
            watermark.Name = "watermark"
            watermark.Parent = core.simp
            watermark.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
            watermark.BorderColor3 = Color3.fromRGB(0, 0, 0)
            watermark.BorderSizePixel = 2
            watermark.Position = UDim2.new(0, 135, 0, -27)
            watermark.Size = UDim2.new(0, 500, 0, 30)
            watermark.ZIndex = 200
            
            Frame.Parent = watermark
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Frame.BorderSizePixel = 2
            Frame.Size = UDim2.new(1, 0, 1, 0)
            Frame.ZIndex = -1
            
            local stra23ba2b3 = Instance.new("UIStroke",Frame)
            stra23ba2b3.Thickness = 1
            stra23ba2b3.Color = Color3.fromRGB(51, 51, 51)
            stra23ba2b3.Enabled = true

            Accent.Name = "Accent"
            Accent.Parent = Frame
            Accent.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
            Accent.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Accent.Position = UDim2.new(0.00499998685, -2, 0.899999917, 0)
            Accent.Size = UDim2.new(0.995, 0, 0, 2)
            
            Title2.Name = "Title2"
            Title2.Parent = Frame
            Title2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title2.BackgroundTransparency = 1.000
            Title2.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Title2.BorderSizePixel = 0
            Title2.Position = UDim2.new(0, 5, -0.00488216197, 0)
            Title2.Size = UDim2.new(1, 0, 1, 0)
            Title2.FontFace = library.font
            Title2.Text = "  Destiny $GAME || UID : $UID || Ping : $PING || Fps : $FPS || Config = $CFG"
            Title2.TextColor3 = Color3.fromRGB(170, 85, 235)
            Title2.TextSize = 9
            Title2.TextXAlignment = Enum.TextXAlignment.Left
            --
            function window.watermark:Visibility()
                watermark.Visible = window.watermark.visible
                Frame.Visible = window.watermark.visible
                Accent.Visible = window.watermark.visible
                Title2.Visible = window.watermark.visible
            end
            --
            function window.watermark:Update(updateType, updateValue)
                if updateType == "Visible" then
                    window.watermark.visible = updateValue
                    window.watermark:Visibility()
                end
            end
            --
            local temp = tick()
            local Tick = tick()
            --
            utility:Connection(rs.RenderStepped, function(FPS)
                
                library.shared.fps = math.floor(1 / math.abs(temp - tick()))
                temp = tick()

                library.shared.ping = stats.Network:FindFirstChild("ServerStatsItem") and tostring(math.round(stats.Network.ServerStatsItem["Data Ping"]:GetValue())) or "Unknown"
                --
                task.spawn(function()
                    if (tick() - Tick) > 0.15 then
                        Title2.Text = window.wminfo:gsub("$PING", library.shared.ping):gsub("$FPS", library.shared.fps):gsub("$UID", 0):gsub("$CFG", "None"):gsub("$GAME", "Trident Survival")
            
                        --
                        Tick = tick()
                    end
                end)
            end)
            --
            return window.watermark
        end
        
        function window:Unload()
            for i,v in pairs(library.connections) do
                v:Disconnect()
                v = nil
            end
            --
            for i,v in next, library.hidden do
                coroutine.wrap(function()
                    if v[1] and v[1].Remove and v[1].__OBJECT_EXISTS then
                        local instance = v[1]
                        v[1] = nil
                        v = nil
                        --
                        instance:Remove()
                    end
                end)()
            end
            --
            for i,v in pairs(library.objects) do
                i:Destroy()
            end
            --
            for i,v in pairs(library.began) do
                v = nil
            end
            --
            for i,v in pairs(library.ended) do
                v = nil
            end
            --
            for i,v in pairs(library.changed) do
                v = nil
            end
            --
            library.objects = {}
            library.hidden = {}
            library.connections = {}
            library.began = {}
            library.ended = {}
            library.changed = {}
            --
        end
        --
        function window:KeybindsList(info)

            window.keybindslist = {visible = false, keybinds = {}}
            --
            local info = info or {}

            -- Instances:

            local keybindspewpew = Instance.new("ScreenGui")
            local Frame = Instance.new("Frame")
            local UIListLayout = Instance.new("UIListLayout")
            local Back = Instance.new("Frame")
            local Folder = Instance.new("Folder")
            local Accent = Instance.new("Frame")
            local Title2 = Instance.new("TextLabel")

            --Properties:

            keybindspewpew.Name = "keybindspewpew"
            keybindspewpew.Parent = core
            keybindspewpew.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

            Frame.Parent = keybindspewpew
            Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Frame.BackgroundTransparency = 1.000
            Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Frame.BorderSizePixel = 0
            Frame.Position = UDim2.new(0.0073529412, 0, 0.382133991, 20)
            Frame.Size = UDim2.new(0, 94, 0, 101)

            UIListLayout.Parent = Frame
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

            Back.Name = "Back"
            Back.Parent = Frame
            Back.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
            Back.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Back.BorderSizePixel = 2
            Back.Position = UDim2.new(-0.180000007, 0, -0.0500000007, 0)
            Back.Size = UDim2.new(1.60147297, 0, 0.282680067, 0)
            Back.ZIndex = 200

            local str = Instance.new("UIStroke",Back)
            str.Thickness = 1
            str.Color = Color3.fromRGB(51, 51, 51)
            str.Enabled = true

            Folder.Parent = Back

            Accent.Name = "Accent"
            Accent.Parent = Folder
            Accent.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
            Accent.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Accent.Position = UDim2.new(0.125, 0, 0.80, 0)
            Accent.Size = UDim2.new(0, 112, 0, 2)

            Title2.Name = "Title2"
            Title2.Parent = Folder
            Title2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Title2.BackgroundTransparency = 1.000
            Title2.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Title2.BorderSizePixel = 0
            Title2.Position = UDim2.new(0, 0, -0.00488218665, -2)
            Title2.Size = UDim2.new(0, 150, 0, 30)
            Title2.FontFace = library.font
            Title2.Text = "[ keybinds ]"
            Title2.TextColor3 = Color3.fromRGB(170, 85, 235)
            Title2.TextSize = 9
            --
            function window.keybindslist:Add(keybindname, keybindvalue)

                if keybindname and keybindvalue and not window.keybindslist.keybinds[keybindname] then

                    local keybindTable = {}

                    local keybind = Instance.new("Frame")
                    local Folder = Instance.new("Folder")
                    local Title2 = Instance.new("TextLabel")
                    local Title2_2 = Instance.new("TextLabel")

                    --Properties:

                    keybind.Name = "keybind"
                    keybind.Parent = keybindspewpew.Frame
                    keybind.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
                    keybind.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    keybind.BorderSizePixel = 2
                    keybind.Position = UDim2.new(0, 0, 0.3, 0)
                    keybind.Size = UDim2.new(1.60147285, 0, 0.30, 0)
                    keybind.ZIndex = 200

                    local str = Instance.new("UIStroke",keybind)
                    str.Thickness = 1
                    str.Color = Color3.fromRGB(45, 45, 45)
                    str.Enabled = true

                    Folder.Parent = keybind

                    Title2.Name = "Title2"
                    Title2.Parent = Folder
                    Title2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    Title2.BackgroundTransparency = 1.000
                    Title2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    Title2.BorderSizePixel = 0
                    Title2.Position = UDim2.new(0, 0, -0.00488210469, 2)
                    Title2.Size = UDim2.new(0, 150, 0, 30)
                    Title2.FontFace = library.font
                    Title2.RichText = true
                    Title2.Text = string.format(' <font color="rgb(170, 85, 235)">  [%s]  </font><font color="rgb(121, 121, 121)">%s</font>',tostring(keybindvalue),tostring(keybindname))
                    Title2.TextSize = 9
                    Title2.TextXAlignment = Enum.TextXAlignment.Left

                    function keybindTable:Remove()
                        
                        keybind:Destroy()
                        Title2:Destroy()
                        Title2_2:Destroy()

                        window.keybindslist.keybinds[keybindname] = nil
                        keybindTable = nil
                    end
                    --
                    function keybindTable:Visibility()
            
                        keybind.Visible = window.keybindslist.visible
                        Title2.Visible = window.keybindslist.visible
                        Title2_2.Visible = window.keybindslist.visible
                    end
                    --
                    window.keybindslist.keybinds[keybindname] = keybindTable
                end
            end
            --
            function window.keybindslist:Remove(keybindname)
                if keybindname and window.keybindslist.keybinds[keybindname] then
                    window.keybindslist.keybinds[keybindname]:Remove()
                    window.keybindslist.keybinds[keybindname] = nil
                end
            end
            --
            function window.keybindslist:Visibility()
         
                Back.Visible = window.keybindslist.visible
                Accent.Visible = window.keybindslist.visible
                Title2.Visible = window.keybindslist.visible
                --
                for i,v in pairs(window.keybindslist.keybinds) do
                    v:Visibility()
                end
            end
            --
            function window.keybindslist:Update(updateType, updateValue)
                if updateType == "Visible" then
                    window.keybindslist.visible = updateValue
                    window.keybindslist:Visibility()
                end
            end
            --


        end
        --
        function window:CloseContent(section,left,right)
            
            if window.currentContent.colorpicker and window.currentContent.colorpicker.open then
                local colorpicker = window.currentContent.colorpicker
                --
             
                for i,v in pairs(colorpicker.holder.drawings) do
                v:Destroy()
                end
                --
                colorpicker.holder.drawings = {}
                --
                colorpicker.open = not colorpicker.open
                --
                window.currentContent.colorpicker = nil
            
            elseif window.currentContent.keybind and window.currentContent.keybind.open then
                local modemenu = window.currentContent.keybind.modemenu
                window.currentContent.keybind.open = not window.currentContent.keybind.open
                --
                for i,v in pairs(modemenu.drawings) do
                    v:Destroy()
                end
                --
                modemenu.drawings = {}
                modemenu.frame = nil
                --
                window.currentContent.keybind = nil

            elseif window.currentContent.multibox and window.currentContent.multibox.open then
                local multibox = window.currentContent.multibox
                multibox.open = not multibox.open
                multibox.arrow.Rotation = 180
                --
                for i,v in pairs(multibox.holder.drawings) do
                    v:Destroy()
                end
                --
                multibox.holder.drawings = {}
                multibox.holder.buttons = {}
                --
                window.currentContent.multibox = nil

            elseif window.currentContent.dropdown and window.currentContent.dropdown.open then

                local dropdown = window.currentContent.dropdown
                dropdown.open = not dropdown.open
                dropdown.arrow.Rotation = 180
                --
                for i,v in pairs(dropdown.holder.drawings) do
                    v:Destroy()
                end
                --
                dropdown.holder.drawings = {}
                dropdown.holder.buttons = {}
                --
                window.currentContent.dropdown = nil    
            end

            for i,v in pairs(core.simp:GetDescendants()) do
                if v.Name == "ff" then
                    v.Parent.ZIndex = -2
                end
            end
        end
        --
        function window:Fade()
            window.fading = true
            window:CloseContent()
            window.isVisible = not window.isVisible
            --      
            spawn(function()
                for i, v in pairs(library.objects) do

                    if tostring(i) == "Drag" then

                        i.Visible = not window.isVisible
                        
                        for i,v in pairs(simp:GetDescendants()) do
                            if v.ClassName == "UIStroke" and v.Parent.Parent.Name ~= "watermark" then
                                v.Enabled = not window.isVisible
                            end
                            if v.ClassName == "UIGradient" and v.Parent.Name ~= "Frame" and v.Parent.Name ~= "Button" then
                                v.Enabled = not window.isVisible
                                game:GetService("TweenService"):Create(v.Parent, TweenInfo.new(.35) , { BackgroundTransparency = window.isVisible and 1 or 0 }):Play()
                            elseif v.Parent.Name == "Button" then
                                v.Enabled = not window.isVisible
                                v.Parent.Visible = not window.isVisible
                            end
                            if v.ClassName == "ImageButton" and v:FindFirstChild("Transp") then
                                game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { ImageTransparency = window.isVisible and 1 or v:FindFirstChild("Transp").Value }):Play()
                            end
                        end

                    end

                    if i.ClassName == "Frame" and i.Name ~= "Button" then
                    game:GetService("TweenService"):Create(i, TweenInfo.new(.35) , { BackgroundTransparency = window.isVisible and 1 or 0 }):Play()
                    elseif i.ClassName == "ImageLabel" then  
                    game:GetService("TweenService"):Create(i, TweenInfo.new(.35) , { ImageTransparency = window.isVisible and 1 or 0 }):Play()
                    elseif i.ClassName == "TextLabel" then
                    game:GetService("TweenService"):Create(i, TweenInfo.new(.35) , { TextTransparency = window.isVisible and 1 or 0 }):Play()
                    elseif i.ClassName == "TextButton" then
                    game:GetService("TweenService"):Create(i, TweenInfo.new(.35) , { TextTransparency = window.isVisible and 1 or 0 }):Play()
                    elseif i.ClassName == "TextBox" then
                    game:GetService("TweenService"):Create(i, TweenInfo.new(.35) , { TextTransparency = window.isVisible and 1 or 0 }):Play()
                    end  

                end
            end)
            --
            window.fading = false
        end
        --
        function window:Initialize()

            window.pages[1]:Show()
            --
            --for i,v in pairs(window.pages) do
            --    v:Update()
            --end
            --
            library.shared.initialized = true
            --
            window.init = true
            window.isVisible = true
            --
            window:Fade()
        end
        
        --// Dragging ui

        local frame = Drag
        local dragToggle = nil
        local dragSpeed = 0.25
        local dragStart = nil
        local startPos = nil

        local function updateInput(input)
            local delta = input.Position - dragStart
            local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            game:GetService('TweenService'):Create(frame.Parent.Parent.Back, TweenInfo.new(dragSpeed), {Position = position}):Play()
        end

        library.began[#library.began + 1] = frame.InputBegan:Connect(function(input)

            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
                dragToggle = true
                dragStart = input.Position
                startPos = frame.Parent.Parent.Back.Position
               
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragToggle = false
                    end
                end)
            end

        end)

        library.began[#library.began + 1] = uis.InputBegan:Connect(function(input)

            if input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
                
                for i,v in pairs(window.currentContent) do

                    if v ~= nil and v.inFrame == false then

                          window.CloseContent()  
                          v.inFrame = true
                    
                    end
                end
           
            end

        end)

        library.changed[#library.changed + 1] = uis.InputChanged:Connect(function(input)

            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                if dragToggle then
                    updateInput(input)
                end
            end

        end)

        library.began[#library.began + 1] = uis.InputBegan:Connect(function(input)
            if input.KeyCode == window.uibind then
                
                window:Fade()
            end
        end)
        
        return setmetatable(window, library)
    end

    function library:Page(info)
        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title or "New Page"
        --
        local window = self
        --
        local Left = Instance.new("Frame")
        local Right = Instance.new("Frame")
        --
        local page = {open = false, sections = {}, sectionOffset = {left = 0, right = 0}, window = window,pageFrames = {Left,Right}}

        -- render
        -- Instances:

        local Frame = Instance.new("Frame")
        local UIGradient = Instance.new("UIGradient")
        local TextButton = Instance.new("TextButton")

        --Properties:

        Frame.Parent = window.tabsframe
        Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Frame.BorderColor3 = Color3.fromRGB(1, 1, 1)
        Frame.BorderSizePixel = 2
        Frame.Size = UDim2.new(0, 100, 0, 30)
        library.objects[Frame] = true
        page["Frame"] = Frame

        local str = Instance.new("UIStroke",Frame)
        str.Thickness = 1
        str.Color = Color3.fromRGB(41,41,41)
        str.Enabled = true

        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(18, 18, 18))}
        UIGradient.Rotation = 90
        UIGradient.Parent = Frame
        page["UIGradient"] = UIGradient

        TextButton.Parent = Frame
        TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextButton.BackgroundTransparency = 1.000
        TextButton.BorderColor3 = Color3.fromRGB(41, 41, 41)
        TextButton.Size = UDim2.new(0, 100, 0, 30)
        TextButton.FontFace = library.font
        TextButton.Text = name
        TextButton.TextColor3 = Color3.fromRGB(140, 140, 140)
        TextButton.TextSize = 9
        page["TextButton"] = TextButton
        library.objects[TextButton] = true
        --
        window.pages[#window.pages + 1] = page
        --

        -- real pages
        -- Instances:

        local Tab = Instance.new("Frame")
        local UIPadding = Instance.new("UIPadding")
        local UIListLayout = Instance.new("UIListLayout")
        
        local UIPadding_2 = Instance.new("UIPadding")
        local UIListLayout_2 = Instance.new("UIListLayout")

        --Properties:

        Tab.Name = name
        Tab.Parent = window.realtabs
        Tab.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
        Tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Tab.BorderSizePixel = 2
        Tab.Position = UDim2.new(0.0224299058, 0, 0.140625, -4)
        Tab.Size = UDim2.new(0, 510, 0, 575)
        Tab.Visible = false
        library.objects[Tab] = true

        Left.Name = "Left"
        Left.Parent = Tab
        Left.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Left.BackgroundTransparency = 1.000
        Left.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Left.BorderSizePixel = 0
        Left.Size = UDim2.new(0, 264, 0, 471)
        Left.ZIndex = -2

        local ff = Instance.new("Folder",Left)
        ff.Name = "ff"

        UIPadding.Parent = Left
        UIPadding.PaddingLeft = UDim.new(0.0500000007, 0)
        UIPadding.PaddingTop = UDim.new(0.0299999993, 0)

        UIListLayout.Parent = Left
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0.0299999993, 0)

        local str = Instance.new("UIStroke",Tab)
        str.Thickness = 1
        str.Color = Color3.fromRGB(51, 51, 51)
        str.Enabled = true

        Right.Name = "Right"
        Right.Parent = Tab
        Right.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Right.BackgroundTransparency = 1.000
        Right.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Right.BorderSizePixel = 0
        Right.Position = UDim2.new(0.486274511, 0, 0, 0)
        Right.Size = UDim2.new(0, 262, 0, 471)
        Right.ZIndex = -2

        local ff2 = Instance.new("Folder",Right)
        ff2.Name = "ff"

        UIPadding_2.Parent = Right
        UIPadding_2.PaddingLeft = UDim.new(0.0500000007, 0)
        UIPadding_2.PaddingTop = UDim.new(0.0299999993, 0)

        UIListLayout_2.Parent = Right
        UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout_2.Padding = UDim.new(0.0299999993, 0)
        --

        function page:Show()

            window:CloseContent()

            if window.currentPage then
                
                local ts = game:GetService("TweenService")

                window.currentPage.UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(40, 40, 40)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(18, 18, 18))}
               
                ts:Create(window.currentPage.TextButton, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140)}):Play()
    
                page.open = true
                window.realtabs:FindFirstChild(window.currentPage.TextButton.Text).Visible = false

                -- add close content here later on
            end
            window.currentPage = page

            local ts = game:GetService("TweenService")

            window.currentPage.UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(18, 18, 18)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(18, 18, 18))}
               
            ts:Create(window.currentPage.TextButton, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235)}):Play()

            window.currentPage.open = false
            --
            
            --
            window.realtabs:FindFirstChild(page["TextButton"].Text).Visible = true
            window.callback(name, window.currentPage)
        end
        --
        library.began[#library.began + 1] = TextButton.InputBegan:Connect(function(Input)
            if Input.UserInputType == Enum.UserInputType.MouseButton1 and window.currentPage ~= page and not window.isVisible then
                page:Show()
            end
        end)
        --
        return setmetatable(page, pages)
    end

    function pages:Section(info)

        local window = self.window
        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title or "New Section"
        local side = window.loader and "Left" or (info.side or info.Side or "Left")
        side = side
        local page = self
        --
        local Section = Instance.new("Frame")
        local UIListLayout = Instance.new("UIListLayout")
        local IGNORE = Instance.new("Frame")
        local Folder = Instance.new("Folder")
        local TextLabel = Instance.new("TextLabel")
        local UIGradient = Instance.new("UIGradient")
        --
        local section = {window = window, page = page, visibleContent = {}, currentAxis = 20, side = side,sectionFrame = Section,page = page}
        --
        section.name = name
        section.frame = Section
        section.UIListLayout = UIListLayout
        --
        local str = Instance.new("UIStroke",Section)
        str.Thickness = 1
        str.Color = Color3.fromRGB(45, 45, 45)
        str.Enabled = true

        Section.Name = name
        Section.Parent = window.realtabs:FindFirstChild(page.TextButton.Text)[side]
        Section.BackgroundColor3 = Color3.fromRGB(19, 19, 19)
        Section.BorderColor3 = Color3.fromRGB(12, 12, 12)
        Section.BorderSizePixel = 6
        Section.Position = UDim2.new(2.92794738e-07, 0, 1.04370423e-08, 0)
        Section.ZIndex = -2
        library.objects[Section] = true
        --
        local ff = Instance.new("Folder",Section)
        ff.Name = "ff"
        --
        UIListLayout.Parent = Section
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

        IGNORE.Name = "IGNORE"
        IGNORE.Parent = Section
        IGNORE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        IGNORE.BackgroundTransparency = 2.000
        IGNORE.BorderColor3 = Color3.fromRGB(0, 0, 0)
        IGNORE.BorderSizePixel = 0
        IGNORE.Size = UDim2.new(0, 220, 0, 8)

        Folder.Parent = Section

        TextLabel.Parent = Folder
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.BorderSizePixel = 0
        TextLabel.Position = UDim2.new(0.0250000004, 0, 0, -12)
        TextLabel.Size = UDim2.new(0, 69, 0, 23)
        TextLabel.FontFace = library.font
        TextLabel.Text = name
        TextLabel.TextColor3 = Color3.fromRGB(205, 205, 205)
        TextLabel.TextSize = 9
        TextLabel.TextXAlignment = Enum.TextXAlignment.Left
        library.objects[TextLabel] = true

        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
        UIGradient.Rotation = 90
        UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
        UIGradient.Parent = Section

        section.frame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)
        
        page.sections[#page.sections + 1] = section
        --
        return setmetatable(section, sections)
    end

    function pages:MultiSection(info)
    
        local info = info or {}
        local msections = info.sections or info.Sections or {"test1","test2","test3"}
        local def = info.def or info.Def or msections[1]
        local side = info.side or info.Side or "Left"
        local size = info.size or info.Size or 250
        local fill = info.fill or info.Fill
        local callback = info.callback or info.Callback or info.callBack or info.CallBack or function() end
        local window = self.window
        local page = self
        local multiSection = {window = window, page = page, sections = {}, backup = {}, visibleContent = {}, currentSection = nil, side = side}


        local Section = Instance.new("Frame")
        local UIGradient = Instance.new("UIGradient")
        local MultiSButtons = Instance.new("Frame")
        local UIGridLayout = Instance.new("UIGridLayout")
        local UIPadding = Instance.new("UIPadding")
        local UIListLayout = Instance.new("UIListLayout")
        local UIPadding_2 = Instance.new("UIPadding")
        local IGNORE_2 = Instance.new("Frame")

        --Properties:

        Section.Name = "Section"
        Section.Parent = window.realtabs:FindFirstChild(page.TextButton.Text)[side]
        Section.BackgroundColor3 = Color3.fromRGB(19, 19, 19)
        Section.BorderColor3 = Color3.fromRGB(12, 12, 12)
        Section.BorderSizePixel = 6
        Section.Position = UDim2.new(-9.96204648e-08, 0, 1.04370423e-08, 0)
        Section.Size = UDim2.new(0, 230, 0, size)

        local str = Instance.new("UIStroke",Section)
        str.Thickness = 1
        str.Color = Color3.fromRGB(45, 45, 45)
        str.Enabled = true

        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
        UIGradient.Rotation = 90
        UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
        UIGradient.Parent = Section

        MultiSButtons.Name = "MultiSButtons"
        MultiSButtons.Parent = Section
        MultiSButtons.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
        MultiSButtons.BorderColor3 = Color3.fromRGB(0, 0, 0)
        MultiSButtons.BorderSizePixel = 2
        MultiSButtons.Position = UDim2.new(0, 0, 0.02359882, 0)
        MultiSButtons.Size = UDim2.new(0, 218, 0, 25)

        library.objects[MultiSButtons] = true

        local str = Instance.new("UIStroke",MultiSButtons)
        str.Thickness = 1
        str.Color = Color3.fromRGB(45, 45, 45)
        str.Enabled = true

        UIGridLayout.Parent = MultiSButtons
        UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder

        UIPadding.Parent = MultiSButtons
        UIPadding.PaddingLeft = UDim.new(0.0350000001, 0)

        UIListLayout.Parent = Section
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

        UIPadding_2.Parent = Section
        UIPadding_2.PaddingLeft = UDim.new(0, 6)
        UIPadding_2.PaddingTop = UDim.new(0, 5)

        IGNORE_2.Name = "IGNORE"
        IGNORE_2.Parent = Section
        IGNORE_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        IGNORE_2.BackgroundTransparency = 2.000
        IGNORE_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
        IGNORE_2.BorderSizePixel = 0
        IGNORE_2.Size = UDim2.new(0, 220, 0, 8)


        for i,v in pairs(msections) do

            local ActualFrame = Instance.new("Frame")
            ActualFrame.Parent = Section
            ActualFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ActualFrame.BackgroundTransparency = 1.000
            ActualFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ActualFrame.BorderSizePixel = 0
            ActualFrame.Visible = false
            ActualFrame.Position = UDim2.new(0, 0, 0, 0)
            ActualFrame.Size = UDim2.new(0, 230, 0, size - 200)
            ActualFrame.Name = v

            local pad = Instance.new("UIPadding",ActualFrame)
            pad.PaddingLeft = UDim.new(0, -5)

            local msection = {window = window, page = page, visibleContent = {}, currentAxis = 20, side = side,sectionFrame = ActualFrame,page = page}
            
            msection.frame = ActualFrame
            msection.UIListLayout = UIListLayout

            msection.sectionFrame = ActualFrame

            local sectionbutton = Instance.new("TextButton")
            local detail = Instance.new("Frame")

            if #msections == 2 then

               
                 
                 --Properties:
                 UIGridLayout.CellSize = UDim2.new(0, 100, 0, 25)

                 
                    local UIListLayout = Instance.new("UIListLayout")

                    UIListLayout.Parent = ActualFrame
                    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

            if v == def then

                multiSection.currentSection = Section:FindFirstChild(v)
                Section:FindFirstChild(v).Visible = true
                
                 sectionbutton.Name = v
                 sectionbutton.Parent = MultiSButtons
                 sectionbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                 sectionbutton.BackgroundTransparency = 1.000
                 sectionbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                 sectionbutton.BorderSizePixel = 0
                 sectionbutton.Size = UDim2.new(0, 200, 0, 50)
                 sectionbutton.FontFace = library.font
                 sectionbutton.Text = v
                 sectionbutton.TextColor3 = Color3.fromRGB(170, 85, 235)
                 sectionbutton.TextSize = 9.000
                 library.objects[sectionbutton] = true

                 detail.Name = "detail"
                 detail.Parent = sectionbutton
                 detail.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
                 detail.BorderColor3 = Color3.fromRGB(0, 0, 0)
                 detail.Position = UDim2.new(0, 0, 0.870000005, 0)
                 detail.Size = UDim2.new(0, 100, 0, 1)
                 library.objects[detail] = true
                 
            else
                 sectionbutton.Name = v
                 sectionbutton.Parent = MultiSButtons
                 sectionbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                 sectionbutton.BackgroundTransparency = 1.000
                 sectionbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                 sectionbutton.BorderSizePixel = 0
                 sectionbutton.Size = UDim2.new(0, 200, 0, 50)
                 sectionbutton.FontFace = library.font
                 sectionbutton.Text = v
                 sectionbutton.TextColor3 = Color3.fromRGB(140, 140, 140)
                 sectionbutton.TextSize = 9.000

                 detail.Name = "detail"
                 detail.Parent = sectionbutton
                 detail.BackgroundColor3 = Color3.fromRGB(140, 140, 140)
                 detail.BorderColor3 = Color3.fromRGB(0, 0, 0)
                 detail.Position = UDim2.new(0, 0, 0.870000005, 0)
                 detail.Size = UDim2.new(0, 100, 0, 1)

                 library.objects[detail] = true
                 library.objects[sectionbutton] = true

            end
            
            library.began[#library.began + 1] = sectionbutton.InputBegan:Connect(function(Input)

                if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then

                    for i,v in pairs(MultiSButtons:GetChildren()) do
                           
                        if v.ClassName == "TextButton" and sectionbutton ~= v then

                            game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                            game:GetService("TweenService"):Create(v.detail, TweenInfo.new(.35) , { BackgroundColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                           
                            window:CloseContent()

                            Section:FindFirstChild(v.Name).Visible = false
                        end

                    end

                    if tostring(sectionbutton.Name) ~= tostring(multiSection.currentSection.Name) then

                        multiSection.currentSection = Section:FindFirstChild(sectionbutton.Name)
                        Section:FindFirstChild(v).Visible = true

                       game:GetService("TweenService"):Create(sectionbutton, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()
                       game:GetService("TweenService"):Create(detail, TweenInfo.new(.35) , { BackgroundColor3 = Color3.fromRGB(170, 85, 235) }):Play()
  

                    end
                 
                end
             end)

            elseif #msections == 3 then

                
                 UIGridLayout.CellSize = UDim2.new(0, 65, 0, 25)

                    local UIListLayout = Instance.new("UIListLayout")

                    UIListLayout.Parent = ActualFrame
                    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

                 --Properties:
                if v == def then

                    multiSection.currentSection = Section:FindFirstChild(v)
                     Section:FindFirstChild(v).Visible = true

                    sectionbutton.Name = v
                    sectionbutton.Parent = MultiSButtons
                    sectionbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    sectionbutton.BackgroundTransparency = 1.000
                    sectionbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    sectionbutton.BorderSizePixel = 0
                    sectionbutton.Size = UDim2.new(0, 200, 0, 50)
                    sectionbutton.FontFace = library.font
                    sectionbutton.Text = v
                    sectionbutton.TextColor3 = Color3.fromRGB(170, 85, 235)
                    sectionbutton.TextSize = 9.000
   
                    detail.Name = "detail"
                    detail.Parent = sectionbutton
                    detail.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
                    detail.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    detail.Position = UDim2.new(0, 0, 0.870000005, 0)
                    detail.Size = UDim2.new(0, 65, 0, 1)
                   
                 library.objects[detail] = true
                 library.objects[sectionbutton] = true
                else
                    sectionbutton.Name = v
                    sectionbutton.Parent = MultiSButtons
                    sectionbutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                    sectionbutton.BackgroundTransparency = 1.000
                    sectionbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    sectionbutton.BorderSizePixel = 0
                    sectionbutton.Size = UDim2.new(0, 200, 0, 50)
                    sectionbutton.FontFace = library.font
                    sectionbutton.Text = v
                    sectionbutton.TextColor3 = Color3.fromRGB(140, 140, 140)
                    sectionbutton.TextSize = 9.000
   
                    detail.Name = "detail"
                    detail.Parent = sectionbutton
                    detail.BackgroundColor3 = Color3.fromRGB(140, 140, 140)
                    detail.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    detail.Position = UDim2.new(0, 0, 0.870000005, 0)
                    detail.Size = UDim2.new(0, 65, 0, 1)
   
                    library.objects[detail] = true
                    library.objects[sectionbutton] = true
                end
            
                library.began[#library.began + 1] = sectionbutton.InputBegan:Connect(function(Input)

                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then

                        for i,v in pairs(MultiSButtons:GetChildren()) do
                               
                            if v.ClassName == "TextButton" and sectionbutton ~= v then

                                game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                game:GetService("TweenService"):Create(v.detail, TweenInfo.new(.35) , { BackgroundColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                               
                                window:CloseContent()

                                Section:FindFirstChild(v.Name).Visible = false
                            end

                        end

                        if tostring(sectionbutton.Name) ~= tostring(multiSection.currentSection.Name) then

                            multiSection.currentSection = Section:FindFirstChild(sectionbutton.Name)
                            Section:FindFirstChild(v).Visible = true
 
                           game:GetService("TweenService"):Create(sectionbutton, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()
                           game:GetService("TweenService"):Create(detail, TweenInfo.new(.35) , { BackgroundColor3 = Color3.fromRGB(170, 85, 235) }):Play()
      

                        end
                     
                    end
                 end)

                 

            end

            sectionFrame = ActualFrame
            multiSection.sections[#multiSection.sections + 1] = setmetatable(msection, sections)
            
        end

        page.sections[#page.sections + 1] = multiSection
        --
     
        return table.unpack(multiSection.sections)
    end

    -- elements
    function sections:Textbox(info)
        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title or "New Button"
        local def = info.def or info.Def or ""
        local placeholder = info.ph or info.PH or info.Ph or info.placeholder or info.Placeholder or "placeholder text"
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local button = {axis = section.currentAxis,frame = nil}
        --
    
          local Button = Instance.new("Frame")
          local ButtonFrame = Instance.new("Frame")
          local TriggerButton = Instance.new("TextBox")
  
          --Properties:
  
          Button.Name = "Buttonasd"
          Button.Parent = section.sectionFrame
          Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
          Button.BackgroundTransparency = 2.000
          Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
          Button.BorderSizePixel = 0
          Button.Position = UDim2.new(0, 0, 0.976744175, 0)
          Button.Size = UDim2.new(0, 220, 0, 26)
      
          ButtonFrame.Name = "ButtonFrame"
          ButtonFrame.Parent = Button
          ButtonFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
          ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
          ButtonFrame.BorderSizePixel = 2
          ButtonFrame.Position = UDim2.new(0.118181542, 0, 0, 6)
          ButtonFrame.Size = UDim2.new(0, 165, 0, 19)
          button.frame = ButtonFrame
  
          library.objects[ButtonFrame] = true
  
          local str2va32 = Instance.new("UIStroke",button.frame)
          str2va32.Thickness = 1
          str2va32.Color = Color3.fromRGB(45, 45, 45)
          str2va32.Enabled = true
  
          library.objects[str2va32] = true
  
          TriggerButton.Name = "TriggerButton"
          TriggerButton.Parent = ButtonFrame
          TriggerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
          TriggerButton.BackgroundTransparency = 1.000
          TriggerButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
          TriggerButton.BorderSizePixel = 0
          TriggerButton.Size = UDim2.new(0, 164, 0, 19)
          TriggerButton.FontFace = library.font
          TriggerButton.TextColor3 = Color3.fromRGB(180,180,180)
          TriggerButton.TextSize = 9.000
          TriggerButton.PlaceholderColor3 = Color3.fromRGB(140,140,140)
          library.objects[TriggerButton] = true
  
          if def ~= "" then
          TriggerButton.Text = def
          else
            TriggerButton.Text = ""
          TriggerButton.PlaceholderText = placeholder
          end
          TriggerButton.PlaceholderText = placeholder

          TriggerButton.MouseEnter:Connect(function()
        
            game:GetService("TweenService"):Create(str2va32, TweenInfo.new(.35) , { Color = Color3.fromRGB(170, 85, 235) }):Play()

        end)

        TriggerButton.MouseLeave:Connect(function()
        
            game:GetService("TweenService"):Create(str2va32, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()
        
        end)

        library.ended[#library.ended + 1] = TriggerButton.FocusLost:Connect(function(Input)
               
            callback(TriggerButton.Text)
            game:GetService("TweenService"):Create(str2va32, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()

        end)

        section.sectionFrame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)

        function button:Get()
            return TriggerButton.Text
        end
		
        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = button
        end
        
        return button
    end

      function sections:List(info)

        local info = info or {}
        local max = info.max or info.Max or info.maximum or info.Maximum or 8
        local options = info.options or info.Options or {"1", "2", "3"}
        local current = info.def or info.Default or info.current or info.Current or options[1]
        --
        local window = self.window
        local page = self.page
        local section = self
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        --
        local list = {axis = section.currentAxis, options = options, max = max, current = current, scrollingindex = 0, scrolling = {false, nil}, buttons = {}}
        --
        local List = Instance.new("Frame")
        local ListFrame = Instance.new("Frame")
        local UIGridLayout = Instance.new("UIGridLayout")
        local UIPadding = Instance.new("UIPadding")
        local UIGradient = Instance.new("UIGradient")
        
        --Properties:
        
        List.Name = "List"
        List.Parent = section.sectionFrame
        List.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        List.BackgroundTransparency = 2.000
        List.BorderColor3 = Color3.fromRGB(0, 0, 0)
        List.BorderSizePixel = 0
        List.Position = UDim2.new(0, 0, 0.590697646, 0)
        List.Size = UDim2.new(0, 220, 0, 182)
        List.ZIndex = -1
        
        ListFrame.Name = "ListFrame"
        ListFrame.Parent = List
        ListFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        ListFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ListFrame.BorderSizePixel = 2
        ListFrame.Position = UDim2.new(0.118181542, 0, 0.0500000007, 0)
        ListFrame.Size = UDim2.new(0, 165, 0, 172)
        ListFrame.ZIndex = -1

        UIGridLayout.Parent = ListFrame
        UIGridLayout.FillDirection = Enum.FillDirection.Vertical
        UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIGridLayout.CellPadding = UDim2.new(0, 2, 0, 2)
        UIGridLayout.CellSize = UDim2.new(0, 167, 0, 19)

        UIPadding.Parent = ListFrame
        UIPadding.PaddingTop = UDim.new(0, 3)

        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
        UIGradient.Rotation = 90
        UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
        UIGradient.Parent = ListFrame

        local str2va32 = Instance.new("UIStroke",ListFrame)
        str2va32.Thickness = 1
        str2va32.Color = Color3.fromRGB(45, 45, 45)
        str2va32.Enabled = true

        function list:Set(current)
            list.current = current
            for i,v in pairs(ListFrame:GetChildren()) do

                if v.ClassName == "TextButton" then

                    if v.Text == tostring(list.current) then

                        game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()

                    else

                        game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(180,180,180) }):Play()

                    end
                end
            end

        end
       --
       function list:Get()
            return list.options[list.current]
        end

        --
        for i=1, list.max do
            
            local value1 = Instance.new("TextButton")

            value1.Name = list.options[i]
            value1.Parent = ListFrame
            value1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            value1.BackgroundTransparency = 1.000
            value1.BorderColor3 = Color3.fromRGB(0, 0, 0)
            value1.BorderSizePixel = 0
            value1.Size = UDim2.new(0, 167, 0, 19)
            value1.FontFace = library.font
            value1.Text = list.options[i]
            value1.TextColor3 = i == 1 and Color3.fromRGB(170, 85, 235) or Color3.fromRGB(180,180,180)
            library.objects[value1] = true
            value1.TextSize = 9.000
            --
            list.buttons[i] = value1
            
            library.began[#library.began + 1] = value1.MouseButton1Click:Connect(function()
                if not window.isVisible and value1.Text ~= "" then
                for i=1, list.max do
             
                        list.current = list.options[value1.Text]
                        list:Refresh()
              
                end
            end
            end)

        end

        function list:Refresh()
            for Index, Value in pairs(list.buttons) do
                Value.Text = list.options[Index] or ""
                Value.Color = Inde == list.current and Color3.fromRGB(170, 85, 235) or Color3.fromRGB(180, 180, 180)
               
            end
        end

        --
        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = list
        end
        --
        return list
    end

    function sections:Button(info)
        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title or "New Button"
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local button = {axis = section.currentAxis,frame = nil}
        --
        local Button = Instance.new("Frame")
        local ButtonFrame = Instance.new("Frame")
        local TriggerButton = Instance.new("TextButton")

        --Properties:

        Button.Name = "Buttonasd"
        Button.Parent = section.sectionFrame
        Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Button.BackgroundTransparency = 2.000
        Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Button.BorderSizePixel = 0
        Button.Position = UDim2.new(0, 0, 0.976744175, 0)
        Button.Size = UDim2.new(0, 220, 0, 26)
    
        ButtonFrame.Name = "ButtonFrame"
        ButtonFrame.Parent = Button
        ButtonFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ButtonFrame.BorderSizePixel = 2
        ButtonFrame.Position = UDim2.new(0.118181542, 0, 0, 6)
        ButtonFrame.Size = UDim2.new(0, 165, 0, 19)
        button.frame = ButtonFrame

        library.objects[ButtonFrame] = true

        local str2va32 = Instance.new("UIStroke",button.frame)
        str2va32.Thickness = 1
        str2va32.Color = Color3.fromRGB(45, 45, 45)
        str2va32.Enabled = true

        library.objects[str2va32] = true

        TriggerButton.Name = "TriggerButton"
        TriggerButton.Parent = ButtonFrame
        TriggerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TriggerButton.BackgroundTransparency = 1.000
        TriggerButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TriggerButton.BorderSizePixel = 0
        TriggerButton.Size = UDim2.new(0, 164, 0, 19)
        TriggerButton.FontFace = library.font
        TriggerButton.TextColor3 = Color3.fromRGB(180,180,180)
        TriggerButton.TextSize = 9.000
        library.objects[TriggerButton] = true

        TriggerButton.Text = name

        TriggerButton.MouseEnter:Connect(function()
        
            game:GetService("TweenService"):Create(str2va32, TweenInfo.new(.35) , { Color = Color3.fromRGB(170, 85, 235) }):Play()

        end)

        TriggerButton.MouseLeave:Connect(function()
        
            game:GetService("TweenService"):Create(str2va32, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()
        
        end)

        library.began[#library.began + 1] = TriggerButton.InputBegan:Connect(function(Input)

            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then

                callback()

            end

        end)

        section.sectionFrame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)

        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = button
        end
        
        return button
    end

    function sections:MultiButtons(info)
        local info = info or {}
        local buttons = info.buttons or info.Buttons or {}
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local buttonHolder = {buttons = {}}

        local Button = Instance.new("Frame")

        Button.Name = "Buttonasd"
        Button.Parent = section.sectionFrame
        Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Button.BackgroundTransparency = 2.000
        Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Button.BorderSizePixel = 0
        Button.Position = UDim2.new(0, 0, 0.976744175, 0)
        Button.Size = UDim2.new(0, 220, 0, 26)

        for i=1, 2 do

            if i == 1 then

                local ButtonFrame = Instance.new("Frame")
                local TriggerButton = Instance.new("TextButton")

                --Properties:

                ButtonFrame.Name = "ButtonFrame"
                ButtonFrame.Parent = Button
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ButtonFrame.BorderSizePixel = 2
                ButtonFrame.Position = UDim2.new(0.118181542, 0, 0, 6)
                ButtonFrame.Size = UDim2.new(0, 80, 0, 19)
                library.objects[ButtonFrame] = true

                local str = Instance.new("UIStroke",ButtonFrame)
                str.Thickness = 1
                str.Color = Color3.fromRGB(48,48,48)
                str.Enabled = true
                library.objects[str] = true

                TriggerButton.Name = "TriggerButton"
                TriggerButton.Parent = ButtonFrame
                TriggerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TriggerButton.BackgroundTransparency = 1.000
                TriggerButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TriggerButton.BorderSizePixel = 0
                TriggerButton.Size = UDim2.new(0, 78, 0, 19)
                TriggerButton.Text = buttons[1][1]
                TriggerButton.FontFace = library.font
                TriggerButton.TextColor3 = Color3.fromRGB(180, 180, 180)
                TriggerButton.TextSize = 9.000
                library.objects[TriggerButton] = true

                TriggerButton.MouseEnter:Connect(function()
        
                    game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(170, 85, 235) }):Play()
        
                end)
        
                TriggerButton.MouseLeave:Connect(function()
                
                    game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()
                
                end)

                library.began[#library.began + 1] = TriggerButton.InputBegan:Connect(function(Input)

                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
        
                        buttons[1][2]()
        
                    end
        
                end)

            else

                local ButtonFrame = Instance.new("Frame")
                local TriggerButton = Instance.new("TextButton")
                
                --Properties:
                
                ButtonFrame.Name = "ButtonFrame"
                ButtonFrame.Parent = Button
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                ButtonFrame.BorderSizePixel = 2
                ButtonFrame.Position = UDim2.new(0.505999982, 0, 0, 6)
                ButtonFrame.Size = UDim2.new(0, 80, 0, 19)
                library.objects[ButtonFrame] = true

                local str = Instance.new("UIStroke",ButtonFrame)
                str.Thickness = 1
                str.Color = Color3.fromRGB(48,48,48)
                str.Enabled = true
                library.objects[str] = true

                TriggerButton.Name = "TriggerButton"
                TriggerButton.Parent = ButtonFrame
                TriggerButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TriggerButton.BackgroundTransparency = 1.000
                TriggerButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TriggerButton.BorderSizePixel = 0
                TriggerButton.Position = UDim2.new(3.91251007e-07, 0, 0, 0)
                TriggerButton.Size = UDim2.new(0, 79, 0, 19)
                TriggerButton.FontFace = library.font
                TriggerButton.Text = buttons[2][1]
                TriggerButton.TextColor3 = Color3.fromRGB(180, 180, 180)
                TriggerButton.TextSize = 9.000
                library.objects[TriggerButton] = true

                TriggerButton.MouseEnter:Connect(function()
        
                    game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(170, 85, 235) }):Play()
        
                end)
        
                TriggerButton.MouseLeave:Connect(function()
                
                    game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()
                
                end)

                library.began[#library.began + 1] = TriggerButton.InputBegan:Connect(function(Input)

                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
        
                        buttons[2][2]()
        
                    end
        
                end)

            end

            section.sectionFrame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)

        end
    end
    
    function sections:Toggle(info)

        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title or "New Toggle"
        local def = info.def or info.Def or info.default or info.Default or false
        local risky = info.risky or info.Risky or false
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local toggle = {axis = section.currentAxis, current = def, addedAxis = 0, addedKeybind = nil, colorpickers = 0, keybind = nil,ToggleFrame = nil,section = section,sectionFrame = section.sectionFrame}

        local Toggle = Instance.new("Frame")
        local TextLabel = Instance.new("TextLabel")
        local Button = Instance.new("Frame")
        local UIGradient = Instance.new("UIGradient")
        local Addons = Instance.new("Frame")
        local UIListLayout = Instance.new("UIListLayout")
        local ActualButton = Instance.new("TextButton")

        --Properties:
    
        Toggle.Name = "Toggle"
        Toggle.Parent = section.sectionFrame
        Toggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Toggle.BackgroundTransparency = 2.000
        Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Toggle.BorderSizePixel = 0
        Toggle.Position = UDim2.new(0, 0, 0.0808080807, 0)
        Toggle.Size = UDim2.new(0, 220, 0, 20)
        toggle.ToggleFrame = Toggle
        --
        local ff = Instance.new("Folder",Toggle)
        ff.Name = "ff"
        --
        TextLabel.Parent = Toggle
        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TextLabel.BackgroundTransparency = 1.000
        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TextLabel.BorderSizePixel = 0
        TextLabel.Position = UDim2.new(0.122727275, 0, 0.025, -3)
        TextLabel.Size = UDim2.new(0, 124, 0, 26)
        TextLabel.FontFace = library.font
        TextLabel.Text = name
        if not risky then
        TextLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
        else
        TextLabel.TextColor3 = Color3.fromRGB(180, 78, 78)
        end
        TextLabel.TextSize = 9.000
        TextLabel.TextXAlignment = Enum.TextXAlignment.Left
        library.objects[TextLabel] = true

        Button.Name = "Button"
        Button.Parent = Toggle
        Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Button.BorderColor3 = Color3.fromRGB(2, 2, 2)
        Button.Position = UDim2.new(0.0549999997, 0, 0.35, 0)
        Button.Size = UDim2.new(0, 7, 0, 7)
        library.objects[Button] = true

        UIGradient.Color = toggle.current == true and ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(141, 73, 192)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(56, 40, 68))} or ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(47,47,47)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(22,22,22))}
        UIGradient.Rotation = 90
        UIGradient.Parent = Button

        toggle.addons = Addons

        Addons.Name = "Addons"
        Addons.Parent = Toggle
        Addons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Addons.BackgroundTransparency = 1.000
        Addons.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Addons.BorderSizePixel = 0
        Addons.Position = UDim2.new(0.463636369, 0, 0.25, 0)
        Addons.Size = UDim2.new(0, 110, 0, 12)

        UIListLayout.Parent = Addons
        UIListLayout.FillDirection = Enum.FillDirection.Horizontal
        UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0.0500000007, 0)

        ActualButton.Name = "ActualButton"
        ActualButton.Parent = Toggle
        ActualButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ActualButton.BackgroundTransparency = 1.000
        ActualButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ActualButton.BorderSizePixel = 0
        ActualButton.Position = UDim2.new(0.0522727259, -8, 0.35800001, -8)
        ActualButton.Size = UDim2.new(0.7, 0, 1, 0)
        ActualButton.Font = Enum.Font.SourceSans
        ActualButton.Text = ""
        ActualButton.TextColor3 = Color3.fromRGB(0, 0, 0)
        ActualButton.TextSize = 9.000
        --
        if not risky then
        ActualButton.MouseEnter:Connect(function()
        
            game:GetService("TweenService"):Create(TextLabel, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()

        end)

        ActualButton.MouseLeave:Connect(function()
        
            game:GetService("TweenService"):Create(TextLabel, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(180, 180, 180) }):Play()
        
        end)
      end
        --  
        function toggle:Get()
            return toggle.current
        end
        --
        function toggle:Set(bool,keybindcurrent)
            if typeof(bool) == "boolean" then
                toggle.current = bool
                 UIGradient.Color = toggle.current == true and ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(141, 73, 192)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(56, 40, 68))} or ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(47,47,47)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(22,22,22))}
                --
                callback(toggle.current)
             
                --
                if toggle.keybind and keybindcurrent then
                    toggle.keybind.active = bool
                    toggle.keybind:Callback()
                    --
                    if toggle.keybind.mode == "Off Hold" then
                        
                        if toggle.current then
                            window.keybindslist:Add(toggle.keybind.keybindname, keybindcurrent)
                        else
                            window.keybindslist:Remove(toggle.keybind.keybindname)
                        end

                    elseif toggle.keybind.mode == "On Hold" then

                        if toggle.current then
                            window.keybindslist:Add(toggle.keybind.keybindname, keybindcurrent)
                        else
                            window.keybindslist:Remove(toggle.keybind.keybindname)
                        end
                            
                    elseif toggle.keybind.mode == "Toggle" then

                        if toggle.current then
                            window.keybindslist:Add(toggle.keybind.keybindname, keybindcurrent)
                        else
                           window.keybindslist:Remove(toggle.keybind.keybindname)
                        end

                    end
                    
                end
            end
        end

        library.began[#library.began + 1] = ActualButton.InputBegan:Connect(function(Input)

            if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                toggle.current = not toggle.current
                UIGradient.Color = toggle.current == true and ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(141, 73, 192)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(56, 40, 68))} or ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(47,47,47)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(22,22,22))}
                --
                callback(toggle.current)
                --
                
            end

        end)

        section.sectionFrame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)

        --
        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = toggle
        end
        --

        --// toggle addons

        function toggle:Colorpicker(info)

            local info = info or {}
            local cpinfo = info.info or info.Info or name
            local name = info.title or info.Title or info.Name or info.name or "colorpicker title"
            local def = info.def or info.Def or info.default or info.Default or Color3.fromRGB(255, 0, 0)
            local transp = info.transparency or info.Transparency or info.transp or info.Transp or info.alpha or info.Alpha or nil
            local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
            local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
            --
            local hh, ss, vv = def:ToHSV()
            local colorpicker = {toggle, axis = toggle.axis, index = toggle.colorpickers, current = {hh, ss, vv , (transp or 0)}, holding = {picker = false, huepicker = false, transparency = false}, holder = {inline = nil, picker = nil, picker_cursor = nil, huepicker = nil, huepicker_cursor = {}, transparency = nil, transparencybg = nil,inFrame = false, transparency_cursor = {}, drawings = {}}}
            --
            local toggle = self

            
            local ColorButton = Instance.new("ImageButton")
            local UIGradient = Instance.new("UIGradient")
            
            ColorButton.Name = "ColorButton"
            ColorButton.Parent = toggle.addons
            ColorButton.BackgroundColor3 = def
            ColorButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ColorButton.BorderSizePixel = 1
            ColorButton.Position = UDim2.new(0.783180952, 0, 0, 0)
            ColorButton.Size = UDim2.new(0, 20, 0, 10)
            ColorButton.Image = "rbxassetid://7878427642"
            ColorButton.ImageTransparency = 1.000
            ColorButton.ZIndex = -2
            
            local ff = Instance.new("Folder",ColorButton)
            ff.Name = "ff"

            local valt = Instance.new("NumberValue", ColorButton)

            if transp then
            valt.Name = "Transp"
            valt.Value = transp
            end

            UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(94,94,94)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
            UIGradient.Rotation = -90
            UIGradient.Parent = ColorButton
            --
            
            --
            function colorpicker:Get()
                return Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3])
            end


            if transp then

                ColorButton.ImageTransparency = 1 - colorpicker.current[4]
                valt.Value = 1 - colorpicker.current[4]
            end

            library.began[#library.began + 1] = ColorButton.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
                    if not colorpicker.open then
                  
                        window:CloseContent()
                        colorpicker.open = not colorpicker.open
                        
                        local ColorPicker = Instance.new("Frame")
                        local UIGradient = Instance.new("UIGradient")
                        local TextLabel = Instance.new("TextLabel")
                        local valsat = Instance.new("ImageLabel")
                        local dot = Instance.new("Frame")
                        local UICorner = Instance.new("UICorner")
                        local Trigger = Instance.new("TextButton")
                        local colorhue = Instance.new("ImageLabel")
                        local color = Instance.new("Frame")
                        local Trigger_2 = Instance.new("TextButton")
                        local transval = Instance.new("ImageLabel")
                        local trans = Instance.new("Frame")
                        local ImageLabel = Instance.new("ImageLabel")
                        local UIGradient_2 = Instance.new("UIGradient")
                        local Trigger_3 = Instance.new("TextButton")
                        

                        --Properties:

                        ColorPicker.Name = "ColorPicker"
                        ColorPicker.Parent = ColorButton
                        ColorPicker.BackgroundColor3 = Color3.fromRGB(19, 19, 19)
                        ColorPicker.BorderColor3 = Color3.fromRGB(12, 12, 12)
                        ColorPicker.BorderSizePixel = 2
                        ColorPicker.Size = UDim2.new(0, 203,0, 178)
                        ColorPicker.ZIndex = 100
                        ColorPicker.Position = UDim2.new(1.2,0,0,0)
                        library.objects[ColorPicker] = ColorPicker

                        local Frame = ColorPicker
                        
                        Frame.MouseEnter:Connect(function()
                          colorpicker.inFrame = true
                        end)
                        
                        Frame.MouseLeave:Connect(function()
                            colorpicker.inFrame = false
                        end)
                        


                        for i,v in pairs(toggle.ToggleFrame.Addons:GetDescendants()) do

                            if v == ColorButton then
                                v.ZIndex = 2
                            end
                        end

                
                            
                    if section.frame.Parent:FindFirstChild("MultiSButtons") == nil then
                        if tostring(toggle.section.side) == "Left" then

                            toggle.sectionFrame.ZIndex = 2
                            toggle.sectionFrame.Parent.Parent["Right"].ZIndex = -2
                            toggle.sectionFrame.Parent.Parent["Left"].ZIndex = 2
                            toggle.ToggleFrame.ZIndex = 2

                            else

                            toggle.sectionFrame.ZIndex = 2
                            toggle.sectionFrame.Parent.Parent["Right"].ZIndex = 2
                            toggle.sectionFrame.Parent.Parent["Left"].ZIndex = -2
                            toggle.ToggleFrame.ZIndex = 2
                        end
                    else
                        if tostring(toggle.section.side) == "Left" then

                            toggle.sectionFrame.ZIndex = 2
                            toggle.sectionFrame.Parent.Parent.Parent["Right"].ZIndex = -2
                            toggle.sectionFrame.Parent.Parent.Parent["Left"].ZIndex = 2
                            toggle.ToggleFrame.ZIndex = 2

                            else

                            toggle.sectionFrame.ZIndex = 2
                            toggle.sectionFrame.Parent.Parent.Parent["Right"].ZIndex = 2
                            toggle.sectionFrame.Parent.Parent.Parent["Left"].ZIndex = -2
                            toggle.ToggleFrame.ZIndex = 2
                        end
                    end

                        local str = Instance.new("UIStroke",ColorPicker)
                        str.Thickness = 1
                        str.Color = Color3.fromRGB(45, 45, 45)
                        str.Enabled = true

                        local BackEffect = Instance.new("ImageLabel")
                        BackEffect.Name = "BackEffect"
                        BackEffect.Parent = ColorPicker
                        BackEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        BackEffect.BackgroundTransparency = 1.000
                        BackEffect.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        BackEffect.BorderSizePixel = 0
                        BackEffect.Position = UDim2.new(-0.068965517, 0, -0.061999999, 0)
                        BackEffect.Size = UDim2.new(0, 230, 0, 203)
                        BackEffect.ZIndex = 2
                        BackEffect.Image = "http://www.roblox.com/asset/?id=4996891970"
                        BackEffect.ImageColor3 = Color3.fromRGB(170, 85, 235)

                        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
                        UIGradient.Rotation = 90
                        UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
                        UIGradient.Parent = ColorPicker

                        TextLabel.Parent = ColorPicker
                        TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        TextLabel.BackgroundTransparency = 1.000
                        TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        TextLabel.BorderSizePixel = 0
                        TextLabel.Position = UDim2.new(0.0199999996, 0, 0.0350000001, 0)
                        TextLabel.Size = UDim2.new(0, 171, 0, 12)
                        TextLabel.FontFace = library.font
                        TextLabel.Text = name
                        TextLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                        TextLabel.TextSize = 9.000
                        TextLabel.TextXAlignment = Enum.TextXAlignment.Left

                        valsat.Name = "valsat"
                        valsat.Parent = ColorPicker
                        valsat.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1],1,1)
                        valsat.BorderColor3 = Color3.fromRGB(45, 45, 45)
                        valsat.Position = UDim2.new(0.0199990869, 0, 0.12645714, 0)
                        valsat.Size = UDim2.new(0, 175, 0, 151)
                        valsat.Image = "http://www.roblox.com/asset/?id=18248267641"

                        dot.Name = "dot"
                        dot.Parent = valsat
                        dot.BackgroundColor3 = Color3.fromRGB(225, 225, 225)
                        dot.BorderColor3 = Color3.fromRGB(45, 45, 45)
                        dot.BorderSizePixel = 2
                        dot.Position = UDim2.new(colorpicker.current[2], -3, 1-colorpicker.current[3] , -3)
                        dot.Size = UDim2.new(0, 4, 0, 4)
                        dot.ZIndex = 6

                        UICorner.CornerRadius = UDim.new(0, 64)
                        UICorner.Parent = dot

                        Trigger.Name = "Trigger"
                        Trigger.Parent = valsat
                        Trigger.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        Trigger.BackgroundTransparency = 1.000
                        Trigger.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Trigger.BorderSizePixel = 0
                        Trigger.Size = UDim2.new(0, 175, 0, 151)
                        Trigger.ZIndex = 2
                        Trigger.Font = Enum.Font.SourceSans
                        Trigger.Text = ""
                        Trigger.TextColor3 = Color3.fromRGB(0, 0, 0)
                        Trigger.TextSize = 14.000

                        colorhue.Name = "colorhue"
                        colorhue.Parent = ColorPicker
                        colorhue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        colorhue.BorderColor3 = Color3.fromRGB(45, 45, 45)
                        colorhue.Position = UDim2.new(0.920000076, 0, 0.12645714, 0)
                        colorhue.Size = UDim2.new(0, 11, 0, 151)
                        colorhue.Image = "http://www.roblox.com/asset/?id=18248283329"

                        color.Name = "color"
                        color.Parent = colorhue
                        color.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1], 1, 1)
                        color.BorderColor3 = Color3.fromRGB(45, 45, 45)
                        color.Position = UDim2.new(0, -2, colorpicker.current[1], -3)
                        color.Size = UDim2.new(0, 15, 0, 3)
                        color.ZIndex = 6

                        Trigger_2.Name = "Trigger"
                        Trigger_2.Parent = colorhue
                        Trigger_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        Trigger_2.BackgroundTransparency = 1.000
                        Trigger_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Trigger_2.BorderSizePixel = 0
                        Trigger_2.Size = UDim2.new(0, 13, 0, 151)
                        Trigger_2.ZIndex = 2
                        Trigger_2.Font = Enum.Font.SourceSans
                        Trigger_2.Text = ""
                        Trigger_2.TextColor3 = Color3.fromRGB(0, 0, 0)
                        Trigger_2.TextSize = 14.000

                        function colorpicker:Set(color, transp_val)
                            if typeof(color) == "table" then
                                colorpicker.current = color
                                ColorButton.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3])
                                ColorButton.ImageTransparency = 1 - colorpicker.current[4]
                                valt.Value = 1 - colorpicker.current[4]
                                callback(Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3]), colorpicker.current[4])
                            elseif typeof(color) == "Color3" then
                                local h, s, v = color:ToHSV()
                                colorpicker.current = {h, s, v, (transp_val or 0)}
                                ColorButton.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3])
                                ColorButton.ImageTransparency = 1 - colorpicker.current[4]
                                valt.Value = 1 - colorpicker.current[4]
                                callback(Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3]), colorpicker.current[4])
                            end
                        end

                        function colorpicker:Refresh()

                            local Mouse = game.Players.LocalPlayer:GetMouse()
                         
                            if colorpicker.open and colorpicker.holding.picker then
                                
                                local slider = valsat
                                local trigger = Trigger

                                colorpicker.current[2] = math.clamp(Mouse.X - trigger.AbsolutePosition.X, 0, trigger.AbsoluteSize.X) / trigger.AbsoluteSize.X -- 2
                                colorpicker.current[3] = 1-(math.clamp(Mouse.Y - trigger.AbsolutePosition.Y, 0, trigger.AbsoluteSize.Y) / trigger.AbsoluteSize.Y) --3 
                                
                                local Colorr = Color3.new(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3])
                                
                                slider.dot.Position = UDim2.new(colorpicker.current[2], -3, 1-colorpicker.current[3] , -3)
                                
                                local h, s, v = Colorr:ToHSV()
                                
                                ColorButton.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3])

                                if transp then

                                    local colorSequence = ColorSequence.new{
                                        ColorSequenceKeypoint.new(0, Color3.fromHSV(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3])),
                                        ColorSequenceKeypoint.new(1, Color3.fromHSV(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3]))
                                    }

                                    slider.Parent.transval.UIGradient.Color = colorSequence
                                end

                            elseif colorpicker.open and colorpicker.holding.huepicker then
            
                                local slider = colorhue
                                local trigger = Trigger_2
            
                                colorpicker.current[1] = (math.clamp(Mouse.Y - trigger.AbsolutePosition.Y, 0, trigger.AbsoluteSize.Y) / trigger.AbsoluteSize.Y)
            
                                slider.color.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1],1,1)
                                
                                slider.Parent.valsat.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1],1,1)
                                
                                slider.color.Position = UDim2.new(0, -3, colorpicker.current[1], -2)
                                

                                
                                ColorButton.BackgroundColor3 = Color3.fromHSV(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3])
                           
                             
                                if transp then

                                    local colorSequence = ColorSequence.new{
                                        ColorSequenceKeypoint.new(0, Color3.fromHSV(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3])),
                                        ColorSequenceKeypoint.new(1, Color3.fromHSV(colorpicker.current[1],colorpicker.current[2],colorpicker.current[3]))
                                    }

                                slider.Parent.transval.UIGradient.Color = colorSequence
                                end
            
                                
                            elseif colorpicker.open and colorpicker.holding.transparency and transp then

                                local slider = transval
                                local trigger = Trigger_3
            
                               colorpicker.current[4] = 1 - (math.clamp(Mouse.X - trigger.AbsolutePosition.X, 0, trigger.AbsoluteSize.X) / trigger.AbsoluteSize.X)
                                --
                                slider.trans.Position = UDim2.new(1-colorpicker.current[4], -3, 0, -3, trigger)
                            
                                ColorButton.ImageTransparency = (1 -colorpicker.current[4])
                                valt.Value = (1 -colorpicker.current[4])
                            end
                            --
                            colorpicker:Set(colorpicker.current)
                        end

                        local sliderActive = false

                        function activateSlider()
	
                            sliderActive = true
                            while sliderActive do
                                colorpicker:Refresh()
                                task.wait()
                            end
                            
                        end

                        library.began[#library.began + 1] = Trigger_2.MouseButton1Down:Connect(function()

                            if not window.isVisible then

                                colorpicker.holding.huepicker = true
                                activateSlider()

                            end

                        end)

                        library.began[#library.began + 1] = Trigger.MouseButton1Down:Connect(function()

                            if not window.isVisible then

                                colorpicker.holding.picker = true
                                activateSlider()

                            end

                        end)

                        library.began[#library.began + 1] = Trigger_3.MouseButton1Down:Connect(function()

                            if not window.isVisible then

                                colorpicker.holding.transparency = true
                                activateSlider()

                            end

                        end)

                        library.ended[#library.ended + 1] = uis.InputEnded:Connect(function(Input)

                            if Input.UserInputType == Enum.UserInputType.MouseButton1 and colorpicker.holding.huepicker then

                                colorpicker.holding.huepicker = false
                                sliderActive = false

                            elseif Input.UserInputType == Enum.UserInputType.MouseButton1 and colorpicker.holding.picker then

                                colorpicker.holding.picker = false
                                sliderActive = false
                                
                            elseif Input.UserInputType == Enum.UserInputType.MouseButton1 and colorpicker.holding.transparency then

                                colorpicker.holding.transparency = false
                                sliderActive = false

                            end

                        end)
                        --
                        if transp then

                        ColorPicker.Size = UDim2.new(0, 203, 0, 198)
                        BackEffect.Size = UDim2.new(0, 230, 0, 225)

                        transval.Name = "transval"
                        transval.Parent = ColorPicker
                        transval.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        transval.BorderColor3 = Color3.fromRGB(45, 45, 45)
                        transval.Position = UDim2.new(0.0200002883, 0, 0.920000017, 0)
                        transval.Size = UDim2.new(0, 175, 0, 11)
                        transval.ZIndex = 2
                        transval.Image = ""

                        trans.Name = "trans"
                        trans.Parent = transval
                        trans.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
                        trans.BorderColor3 = Color3.fromRGB(45, 45, 45)
                        trans.BorderSizePixel = 2
                        trans.Position = UDim2.new(1-colorpicker.current[4], -3, 0, -2)
                        trans.Size = UDim2.new(0, 2, 0, 15)
                        trans.ZIndex = 6

                        local str2 = Instance.new("UIStroke",trans)
                        str2.Thickness = 1
                        str2.Color = Color3.fromRGB(83,83,83)
                        str2.Enabled = true

                        ImageLabel.Parent = transval
                        ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        ImageLabel.BackgroundTransparency = 1.000
                        ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        ImageLabel.BorderSizePixel = 0
                        ImageLabel.Size = UDim2.new(0, 175, 0, 11)
                        ImageLabel.Image = "http://www.roblox.com/asset/?id=18248333367"
                        ImageLabel.ImageTransparency = 0.880
                        end
                        --
                        UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3])), ColorSequenceKeypoint.new(1.00, Color3.fromHSV(colorpicker.current[1], colorpicker.current[2], colorpicker.current[3]))}
                        UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 1.00), NumberSequenceKeypoint.new(0.34, 0.83), NumberSequenceKeypoint.new(0.58, 0.69), NumberSequenceKeypoint.new(0.79, 0.42), NumberSequenceKeypoint.new(1.00, 0.00)}
                        UIGradient_2.Parent = transval

                        Trigger_3.Name = "Trigger"
                        Trigger_3.Parent = transval
                        Trigger_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        Trigger_3.BackgroundTransparency = 1.000
                        Trigger_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        Trigger_3.BorderSizePixel = 0
                        Trigger_3.Size = UDim2.new(0, 175, 0, 11)
                        Trigger_3.ZIndex = 2
                        Trigger_3.Font = Enum.Font.SourceSans
                        Trigger_3.Text = ""
                        Trigger_3.TextColor3 = Color3.fromRGB(0, 0, 0)
                        Trigger_3.TextSize = 14.000

                        colorpicker.holder.drawings[ColorPicker] = ColorPicker

                        --window.currentContent.frame
                        window.currentContent.colorpicker = colorpicker
                    else
                        for i,v in pairs(colorpicker.holder.drawings) do
                        v:Destroy()
                        end
                        --
                        for i,v in pairs(core.simp:GetDescendants()) do
                            if v.Name == "ff" then
                                v.Parent.ZIndex = -2
                            end
                        end
                        --
                        colorpicker.holder.drawings = {}
                        colorpicker.open = not colorpicker.open
     
                        window.currentContent.colorpicker = nil

                    end
                end
    
            end)

            -------

            if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
                library.pointers[tostring(pointer)] = colorpicker
            end
            toggle.colorpickers = toggle.colorpickers + 1
            --
            return colorpicker
        end

        function toggle:Keybind(info)

            local info = info or {}
            local def = info.def or info.Def or info.default or info.Default or nil
            local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
            local mode = info.mode or info.Mode or "On Hold" -- Modes: Toggle, On Hold, Off Hold
            local keybindname = info.keybindname or info.keybindName or info.KeybindName or info.Keybindname or nil
            local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
            --
            local keybind = {keybindname = keybindname or name, axis = toggle.axis, current = {}, selecting = false, mode = mode, open = false, modemenu = {drawings = {}}, active = false, inFrame = false}
            --
            toggle.keybind = keybind
            --
            local allowedKeyCodes = {"Q","W","E","R","T","Y","U","I","O","P","A","S","D","F","G","H","J","K","L","Z","X","C","V","B","N","M","One","Two","Three","Four","Five","Six","Seveen","Eight","Nine","Zero", "Minus", "Equals","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Insert","Tab","Home","End","LeftAlt","LeftControl","LeftShift","RightAlt","RightControl","Backspace","RightShift","CapsLock"}
            local allowedInputTypes = {"MouseButton1","MouseButton2","MouseButton3"}
            local shortenedInputs = {["MouseButton1"] = "MB1", ["MouseButton2"] = "MB2", ["MouseButton3"] = "MB3", ["Insert"] = "Ins", ["Minus"] = "-", ["Equals"] = "=", ["LeftAlt"] = "LAlt", ["LeftControl"] = "LC", ["LeftShift"] = "LS", ["RightAlt"] = "RAlt", ["RightControl"] = "RC", ["RightShift"] = "RS", ["CapsLock"] = "Caps"}
            --
            local keybindbutton = Instance.new("TextButton")

            keybindbutton.Name = "keybind"
            keybindbutton.Parent = toggle.addons
            keybindbutton.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
            keybindbutton.BackgroundTransparency = 1.000
            keybindbutton.BorderColor3 = Color3.fromRGB(9, 9, 9)
            keybindbutton.Position = UDim2.new(0, 0, 0, 0)
            keybindbutton.FontFace = library.font
            keybindbutton.Text = "[None]"
            keybindbutton.Size = UDim2.new(0, keybindbutton.TextBounds.X + 10, 0, 12)
            keybindbutton.TextColor3 = Color3.fromRGB(140, 140, 140)
            keybindbutton.TextSize = 9.000
            keybindbutton.TextXAlignment = Enum.TextXAlignment.Right
            library.objects[keybindbutton] = keybindbutton

            --
            local ff = Instance.new("Folder",keybindbutton)
            ff.Name = "ff"
            --
            function keybind:Shorten(string)
                for i,v in pairs(shortenedInputs) do
                    string = string.gsub(string, i, v)
                end
                return string
            end
            --
            function keybind:Change(input)
                input = input or "..."
                local inputTable = {}
                --
                if input.EnumType then
                    if input.EnumType == Enum.KeyCode or input.EnumType == Enum.UserInputType then
                        if Find(allowedKeyCodes, input.Name) or Find(allowedInputTypes, input.Name) then
                          
                            inputTable = {input.EnumType == Enum.KeyCode and "KeyCode" or "UserInputType", input.Name}
                            --
                            keybind.current = inputTable
                            keybindbutton.Text = #keybind.current > 0 and "["..keybind:Shorten(keybind.current[2]).."]" or "[...]"
                            callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                            --
                            return true
                        end
                    end
                end
	 	
                --
                return false
            end
            --
            function keybind:Get()
                return keybind.current
            end
            --
            function keybind:Set(tbl)
   
                if keybind.current[1] and keybind.current[2] then
                    callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                end
            end
            --
            function keybind:Active()
                return keybind.active
            end
            --
            function keybind:Reset()
                
                if keybind.current[1] and keybind.current[2] then
                    callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                end
            end
            --
            function keybind:Callback()
                if keybind.current[1] and keybind.current[2] then
                    callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                end
            end
            --
            keybind:Change(def)
            --
            library.began[#library.began + 1] = uis.InputBegan:Connect(function(Input)

               -- print(keybind.current[1], keybind.current[2], keybind.active)

                if keybind.current[1] and keybind.current[2] then
                    if Input.KeyCode == Enum[keybind.current[1]][keybind.current[2]] or Input.UserInputType == Enum[keybind.current[1]][keybind.current[2]] then
                        if keybind.mode == "On Hold" then
                            keybind.active = true
                            toggle:Set(keybind.active,keybind.current[2])
                            callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                        elseif keybind.mode == "Off Hold" then
                            keybind.active = false
                            toggle:Set(keybind.active,keybind.current[2])
                            callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                        elseif keybind.mode == "Toggle" then
                            keybind.active = not keybind.active
                            toggle:Set(keybind.active,keybind.current[2])
                            callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                        end
                    end
                end
                --
                if keybind.selecting and not window.isVisible then
                    local done = keybind:Change(Input.KeyCode.Name ~= "Unknown" and Input.KeyCode or Input.UserInputType)
                    if done then
                        keybind.selecting = false
                        keybind.active = keybind.mode == "Always" and true or false
                        --
                        callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                    end
                end
                --
                
            end)

            library.began[#library.began + 1] = keybindbutton.InputBegan:Connect(function(Input)
               
                if Input.UserInputType == Enum.UserInputType.MouseButton2 and not window.isVisible then
                        
                    if not keybind.open then
                        window:CloseContent()
                        keybind.open = not keybind.open

                        local Keybindmode = Instance.new("Frame")
                        local UIGradient = Instance.new("UIGradient")
                        local toggle2 = Instance.new("TextButton")
                        local UIListLayout = Instance.new("UIListLayout")
                        local hold = Instance.new("TextButton")
                        local UIPadding = Instance.new("UIPadding")
                        local offhold = Instance.new("TextButton")

                        --fac sectiunea 1 sa fie peste celalalte
                        --fac partea opusa -3 sa fie sub cea in care se afla toggleu (Left,Right)
                        --fac toate toggles mai putin cel in care se afla framul le fac -1

                        for i,v in pairs(toggle.ToggleFrame.Addons:GetDescendants()) do

                            if v == ColorButton then
                                v.ZIndex = 2
                            end
                        end

                        if section.frame.Parent:FindFirstChild("MultiSButtons") == nil then
                            if tostring(toggle.section.side) == "Left" then
    
                                toggle.sectionFrame.ZIndex = 2
                                toggle.sectionFrame.Parent.Parent["Right"].ZIndex = -2
                                toggle.sectionFrame.Parent.Parent["Left"].ZIndex = 2
                                toggle.ToggleFrame.ZIndex = 2
    
                                else
    
                                toggle.sectionFrame.ZIndex = 2
                                toggle.sectionFrame.Parent.Parent["Right"].ZIndex = 2
                                toggle.sectionFrame.Parent.Parent["Left"].ZIndex = -2
                                toggle.ToggleFrame.ZIndex = 2
                            end
                        else
                            if tostring(toggle.section.side) == "Left" then
    
                                toggle.sectionFrame.ZIndex = 2
                                toggle.sectionFrame.Parent.Parent.Parent["Right"].ZIndex = -2
                                toggle.sectionFrame.Parent.Parent.Parent["Left"].ZIndex = 2
                                toggle.ToggleFrame.ZIndex = 2
    
                                else
    
                                toggle.sectionFrame.ZIndex = 2
                                toggle.sectionFrame.Parent.Parent.Parent["Right"].ZIndex = 2
                                toggle.sectionFrame.Parent.Parent.Parent["Left"].ZIndex = -2
                                toggle.ToggleFrame.ZIndex = 2
                            end
                        end

                        --Properties:

                        Keybindmode.Name = "Keybindmode"
                        Keybindmode.Parent = keybindbutton
                        Keybindmode.BackgroundColor3 = Color3.fromRGB(19, 19, 19)
                        Keybindmode.BorderColor3 = Color3.fromRGB(12, 12, 12)
                        Keybindmode.BorderSizePixel = 2
                        Keybindmode.Position = UDim2.new(1,0,0,0)
                        Keybindmode.Size = UDim2.new(0, 112, 0, 66)
                        Keybindmode.ZIndex = 100
                        keybind.modemenu.drawings[Keybindmode] = Keybindmode

                        local Frame = Keybindmode
                        
                        Frame.MouseEnter:Connect(function()
                          keybind.inFrame = true
                        end)
                        
                        Frame.MouseLeave:Connect(function()
                            keybind.inFrame = false
                        end)
                        local str = Instance.new("UIStroke",Keybindmode)
                        str.Thickness = 1
                        str.Color = Color3.fromRGB(48,48,48)
                        str.Enabled = true

                        UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
                        UIGradient.Rotation = 90
                        UIGradient.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
                        UIGradient.Parent = Keybindmode
                        
                        toggle2.Name = "toggle"
                        toggle2.Parent = Keybindmode
                        toggle2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        toggle2.BackgroundTransparency = 1.000
                        toggle2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        toggle2.BorderSizePixel = 0
                        toggle2.Size = UDim2.new(0, 112, 0, 19)
                        toggle2.FontFace = library.font
                        toggle2.Text = "  Toggle"
                        if keybind.mode == "Toggle" then
                            toggle2.TextColor3 = Color3.fromRGB(170, 85, 235)
                             toggle2.Text = "   Toggle"
                        else
                            toggle2.TextColor3 = Color3.fromRGB(140, 140, 140)
                        end
                        toggle2.TextSize = 9.000
                        toggle2.TextXAlignment = Enum.TextXAlignment.Left

                        UIListLayout.Parent = Keybindmode
                        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

                        hold.Name = "hold"
                        hold.Parent = Keybindmode
                        hold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        hold.BackgroundTransparency = 1.000
                        hold.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        hold.BorderSizePixel = 0
                        hold.Size = UDim2.new(0, 112, 0, 19)
                        hold.FontFace = library.font
                        hold.Text = "  On Hold"
                        if keybind.mode == "On Hold" then
                            hold.Text = "   On Hold"
                            hold.TextColor3 = Color3.fromRGB(170, 85, 235)
                        else
                            hold.TextColor3 = Color3.fromRGB(140, 140, 140)
                        end
                        hold.TextSize = 9.000
                        hold.TextXAlignment = Enum.TextXAlignment.Left

                        UIPadding.Parent = Keybindmode
                        UIPadding.PaddingTop = UDim.new(0.0599999987, 0)

                        offhold.Name = "offhold"
                        offhold.Parent = Keybindmode
                        offhold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        offhold.BackgroundTransparency = 1.000
                        offhold.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        offhold.BorderSizePixel = 0
                        offhold.Size = UDim2.new(0, 112, 0, 19)
                        offhold.FontFace = library.font
                        offhold.Text = "  Off Hold"
                        if keybind.mode == "Off Hold" then
                            offhold.TextColor3 = Color3.fromRGB(170, 85, 235)
                            offhold.Text = "   Off Hold"
                        else
                            offhold.TextColor3 = Color3.fromRGB(140, 140, 140)
                        end
                        offhold.TextSize = 9.000
                        offhold.TextXAlignment = Enum.TextXAlignment.Left

                        --
                        local buttons = {toggle2,hold,offhold}

                        for i,v in pairs(buttons) do

                            library.began[#library.began + 1] = v.InputBegan:Connect(function(Input)

                                if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible and v == toggle2 then

                                    game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()
                                    game:GetService("TweenService"):Create(hold, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                    game:GetService("TweenService"):Create(offhold, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                    v.Text = "   Toggle"
                                    hold.Text = "  On Hold"
                                    offhold.Text = "  Off Hold"
                                    keybind.mode = "Toggle"

                                elseif Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible and v == hold then

                                    game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()
                                    game:GetService("TweenService"):Create(toggle2, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                    game:GetService("TweenService"):Create(offhold, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                    v.Text = "   On Hold"
                                    toggle2.Text = "  Toggle"
                                    offhold.Text = "  Off Hold"
                                    keybind.mode = "On Hold"

                                elseif Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible and v == offhold then

                                    game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235) }):Play()
                                    game:GetService("TweenService"):Create(toggle2, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                    game:GetService("TweenService"):Create(hold, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140) }):Play()
                                    keybind.mode = "Off Hold"
                                    v.Text = "   Off Hold"
                                    toggle2.Text = "  Toggle"
                                    hold.Text = "  On Hold"
                                end

                            end)

                        end


                        --
                        window.currentContent.keybind = keybind

                    else

                        keybind.open = not keybind.open
                        --
                        for i,v in pairs(keybind.modemenu.drawings) do
                            v:Destroy()
                        end
                        --
                        for i,v in pairs(core.simp:GetDescendants()) do
                            if v.Name == "ff" then
                                v.Parent.ZIndex = -2
                            end
                        end
                        --
                        keybind.modemenu.drawings = {}
                        keybind.modemenu.frame = nil
                        --
                        window.currentContent.keybind = nil
                    end
                end

                    if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
                        keybindbutton.Text = "[...]"
                        wait(0.1)
                        keybind.selecting = true

                    end
                 
                end)


            library.ended[#library.ended + 1] = uis.InputEnded:Connect(function(Input)

                if keybind.mode == "On Hold" or keybind.mode == "Off Hold" then
                    if keybind.current[1] and keybind.current[2] then
                        if Input.KeyCode == Enum[keybind.current[1]][keybind.current[2]] or Input.UserInputType == Enum[keybind.current[1]][keybind.current[2]] then
                            if keybind.mode == "On Hold" then
                                if keybind.active then
                                    keybind.active = false
                                    callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                                    toggle:Set(keybind.active,keybind.current[2])
                                end
                            else
                                keybind.active = true
                                toggle:Set(keybind.active,keybind.current[2])
                                callback(Enum[keybind.current[1]][keybind.current[2]], keybind.active)
                            end
                        end
                    end
                end
            end)

            --
            if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
                library.pointers[tostring(pointer)] = keybind
            end
            --
            return keybind

        end

        section.frame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)
        return toggle
    end
	--
    function sections:Dropdown(info)

        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title
        local max = info.max or info.Max
        local options = info.options or info.Options or {"1", "2", "3"}
        local def = info.def or info.Def or info.default or info.Default or options[1]
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local dropdown = {open = false,arrow = nil, scrollindex = max and 0, scrolling = max and {false, nil}, current = tostring(def), options = options,inFrame = true, holder = {drawings = {},buttons = {}}, axis = section.currentAxis}
  
        local Dropdownn = Instance.new("Frame")
        local DropdownnFrame = Instance.new("Frame")
        local dropdown_value = Instance.new("TextLabel")
        local Arrow = Instance.new("ImageLabel")
        local Trigger = Instance.new("TextButton")
  
        local str = Instance.new("UIStroke")
        str.Thickness = 1
        str.Color = Color3.fromRGB(48,48,48)
        str.Enabled = true

    do
        --
        --
        if name then

            local TextLabel = Instance.new("TextLabel")
            
            --Properties:
            
            Dropdownn.Name = "Dropdownn"
            Dropdownn.Parent = section.sectionFrame
            Dropdownn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Dropdownn.BackgroundTransparency = 2.000
            Dropdownn.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Dropdownn.BorderSizePixel = 0
            Dropdownn.Position = UDim2.new(0, 0, 0.545454562, 0)
            Dropdownn.Size = UDim2.new(0, 220, 0, 42)
            Dropdownn.ZIndex = -2
            
            local ff = Instance.new("Folder",Dropdownn)
            ff.Name = "ff"

            TextLabel.Parent = Dropdownn
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.118181817, 0, 0.0700000003, -7)
            TextLabel.Size = UDim2.new(0, 124, 0, 26)
            TextLabel.FontFace = library.font
            TextLabel.Text = name
            TextLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
            TextLabel.TextSize = 9
            TextLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            library.objects[TextLabel] = true

            DropdownnFrame.Name = "DropdownnFrame"
            DropdownnFrame.Parent = Dropdownn
            DropdownnFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            DropdownnFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            DropdownnFrame.BorderSizePixel = 2
            DropdownnFrame.Position = UDim2.new(0.118181542, 0, 0.450547907, 0)
            DropdownnFrame.Size = UDim2.new(0, 165, 0, 19)
            DropdownnFrame.ZIndex = 100
            
            library.objects[DropdownnFrame] = true

            str.Parent = DropdownnFrame

            dropdown_value.Name = "value"
            dropdown_value.Parent = DropdownnFrame
            dropdown_value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            dropdown_value.BackgroundTransparency = 1.000
            dropdown_value.BorderColor3 = Color3.fromRGB(0, 0, 0)
            dropdown_value.BorderSizePixel = 0
            dropdown_value.Position = UDim2.new(0.0484848469, 0, 0, 0)
            dropdown_value.Size = UDim2.new(0, 134, 0, 19)
            dropdown_value.FontFace = library.font
            dropdown_value.Text = def
            dropdown_value.TextColor3 = Color3.fromRGB(180, 180, 180)
            dropdown_value.TextSize = 9.000
            dropdown_value.TextXAlignment = Enum.TextXAlignment.Left
            
            library.objects[dropdown_value] = true

            Arrow.Name = "Arrow"
            Arrow.Parent = DropdownnFrame
            Arrow.BackgroundColor3 = Color3.fromRGB(72, 72, 72)
            Arrow.BackgroundTransparency = 1.000
            Arrow.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Arrow.BorderSizePixel = 0
            Arrow.Position = UDim2.new(0.910000026, 0, 0.37, 0)
            Arrow.Size = UDim2.new(0, 8, 0, 6)
            Arrow.ZIndex = -1
            Arrow.Image = "http://www.roblox.com/asset/?id=18316323943"
            Arrow.ImageColor3 = Color3.fromRGB(116, 116, 116)
            dropdown.arrow = Arrow
            dropdown.arrow.Rotation = 180

            library.objects[Arrow] = true
        else

            --Properties:
            
            Dropdownn.Name = "Dropdownn"
            Dropdownn.Parent = section.sectionFrame
            Dropdownn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Dropdownn.BackgroundTransparency = 2.000
            Dropdownn.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Dropdownn.BorderSizePixel = 0
            Dropdownn.Position = UDim2.new(0, 0, 0.545454562, 0)
            Dropdownn.Size = UDim2.new(0, 220, 0, 25)
            Dropdownn.ZIndex = -2


            local ff = Instance.new("Folder",Dropdownn)
            ff.Name = "ff"

            DropdownnFrame.Name = "DropdownnFrame"
            DropdownnFrame.Parent = Dropdownn
            DropdownnFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            DropdownnFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            DropdownnFrame.BorderSizePixel = 2
            DropdownnFrame.Position = UDim2.new(0.118181817, 0, 0.0700000003, 2)
            DropdownnFrame.Size = UDim2.new(0, 165, 0, 19)
            DropdownnFrame.ZIndex = 100
            
            str.Parent = DropdownnFrame

            dropdown_value.Name = "value"
            dropdown_value.Parent = DropdownnFrame
            dropdown_value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            dropdown_value.BackgroundTransparency = 1.000
            dropdown_value.BorderColor3 = Color3.fromRGB(0, 0, 0)
            dropdown_value.BorderSizePixel = 0
            dropdown_value.Position = UDim2.new(0.0484848469, 0, 0, 0)
            dropdown_value.Size = UDim2.new(0, 134, 0, 19)
            dropdown_value.FontFace = library.font
            dropdown_value.Text = def
            dropdown_value.TextColor3 = Color3.fromRGB(180, 180, 180)
            dropdown_value.TextSize = 9.000
            dropdown_value.TextXAlignment = Enum.TextXAlignment.Left
            
    

            Arrow.Name = "Arrow"
            Arrow.Parent = DropdownnFrame
            Arrow.BackgroundColor3 = Color3.fromRGB(72, 72, 72)
            Arrow.BackgroundTransparency = 1.000
            Arrow.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Arrow.BorderSizePixel = 0
            Arrow.Position = UDim2.new(0.910000026, 0, 0.37, 0)
            Arrow.Size = UDim2.new(0, 8, 0, 6)
            Arrow.ZIndex = -1
            Arrow.Image = "http://www.roblox.com/asset/?id=18316323943"
            Arrow.ImageColor3 = Color3.fromRGB(116, 116, 116)
            dropdown.arrow = Arrow
            dropdown.arrow.Rotation = 180

            library.objects[DropdownnFrame] = true
            library.objects[dropdown_value] = true
            library.objects[Arrow] = true
        end

        
        Trigger.Name = "Trigger"
        Trigger.Parent = DropdownnFrame
        Trigger.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Trigger.BackgroundTransparency = 1.000
        Trigger.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Trigger.BorderSizePixel = 0
        Trigger.Size = UDim2.new(0, 166, 0, 19)
        Trigger.Font = Enum.Font.SourceSans
        Trigger.Text = ""
        Trigger.TextColor3 = Color3.fromRGB(0, 0, 0)
        Trigger.TextSize = 14.000
	
        --

        Trigger.MouseEnter:Connect(function()
        
            game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(170, 85, 235) }):Play()

        end)

        Trigger.MouseLeave:Connect(function()
        
            game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()
        
        end)

    end

        --
        function dropdown:Set(value)
            if typeof(value) == "string" and Find(dropdown.options, value) then
                dropdown.current = value
                dropdown_value.Text = value
                callback(value)
            end
        end
        --
        function dropdown:Get()
            return dropdown.current
        end
        --
        library.began[#library.began + 1] = Trigger.InputBegan:Connect(function(Input)

            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then


                if not dropdown.open then

                    window:CloseContent()
                    dropdown.open = not dropdown.open

                    dropdown.arrow.Rotation = 0
                     --
                    local ListFrame = Instance.new("Frame")
                    local UIGradient3 = Instance.new("UIGradient")
                    local UIPadding = Instance.new("UIPadding")
                    local UIListLayout = Instance.new("UIListLayout")

                    --Properties:

                    ListFrame.Name = "ListFrame"
                    ListFrame.Parent = DropdownnFrame
                    ListFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    ListFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    ListFrame.BorderSizePixel = 2
                    ListFrame.Position = UDim2.new(3.69910026e-07, 0, 1.27718151, 0)
                    ListFrame.Size = UDim2.new(0, 166, 0, 23)
                    ListFrame.Visible = true
                    ListFrame.ZIndex = 100
                 
        
                    ListFrame.MouseEnter:Connect(function()
                      dropdown.inFrame = true
                    end)
                    
                    ListFrame.MouseLeave:Connect(function()
                        dropdown.inFrame = false
                    end)

                    dropdown.holder.drawings[ListFrame] = ListFrame

                    local str = Instance.new("UIStroke",ListFrame)
                    str.Thickness = 1
                    str.Color = Color3.fromRGB(48,48,48)
                    str.Enabled = true

                    UIGradient3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
                    UIGradient3.Rotation = 90
                    UIGradient3.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
                    UIGradient3.Parent = ListFrame

                    for Index = 1, #dropdown.options do
                    
                        local value1 = Instance.new("TextButton")
                        value1.Name = dropdown.options[Index]
                        value1.Parent = ListFrame
                        value1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        value1.BackgroundTransparency = 1.000
                        value1.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        value1.BorderSizePixel = 0
                        value1.Size = UDim2.new(0, 167, 0, 19)
                        value1.FontFace = library.font
                        value1.Text = tostring("  "..dropdown.options[Index])
                        value1.TextXAlignment = Enum.TextXAlignment.Left
                        value1.TextSize = 9.000
                        value1.TextColor3 = Color3.fromRGB(140, 140, 140)

                        if tostring(dropdown.options[Index]) == tostring(def) then
                        value1.TextColor3 = Color3.fromRGB(170, 85, 235)
                        value1.Text = tostring("   "..dropdown.options[Index])
                        end

                        
                        --
                        dropdown.holder.buttons[#dropdown.holder.buttons + 1] = {value1, dropdown.options[Index]}
                        --
		    UIListLayout.Parent = ListFrame
                    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                    UIListLayout.Padding = UDim.new(0.0149999997, 0)

                    ListFrame.Size = UDim2.new(0, 166,0,UIListLayout.AbsoluteContentSize.Y + 6)

                        
                    end

                    for index, table in pairs(dropdown.holder.buttons) do 
                        library.began[#library.began + 1] = table[1].InputBegan:Connect(function(Input)
                            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible and dropdown.open then
                                for i,v in pairs(table[1].Parent:GetChildren()) do
                                    if v.ClassName == "TextButton" then
                                        if v == table[1] then
                                   
                                    dropdown.current = table[2]
                                    table[1].Text = "   "..table[2]

                                    game:GetService("TweenService"):Create(table[1], TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235)}):Play()
                                    
                                    callback(table[2])
                                    dropdown_value.Text = table[2]
                                    def = table[2]
                                        
                                elseif v ~= table[1] then
    
                                    v.Text = "  "..string.gsub(v.Text," ","")
                                    game:GetService("TweenService"):Create(v, TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140)}):Play()
                                    end
                               
                                end
                                end
                            end
                        end)
                    end

                    UIPadding.Parent = ListFrame
                    UIPadding.PaddingTop = UDim.new(0, 2)

                    ListFrame.Size = UDim2.new(0, 166,0,UIListLayout.AbsoluteContentSize.Y + 6)

                    --
                    if section.frame.Parent:FindFirstChild("MultiSButtons") == nil then
                        if tostring(section.side) == "Left" then
                            section.sectionFrame.ZIndex = 2
                            section.sectionFrame.Parent.Parent["Right"].ZIndex = -2
                            section.sectionFrame.Parent.Parent["Left"].ZIndex = 2
                            Dropdownn.ZIndex = 2
                            else
                            section.sectionFrame.ZIndex = 2
                            section.sectionFrame.Parent.Parent["Right"].ZIndex = 2
                            section.sectionFrame.Parent.Parent["Left"].ZIndex = -2
                            Dropdownn.ZIndex = 2
                        end
                        else
                            if tostring(section.side) == "Left" then
                                section.sectionFrame.ZIndex = 2
                                section.sectionFrame.Parent.Parent.Parent["Right"].ZIndex = -2
                                section.sectionFrame.Parent.Parent.ZIndex = 2
                                Dropdownn.ZIndex = 2
                                else
                                section.sectionFrame.ZIndex = 2
                                section.sectionFrame.Parent.Parent.ZIndex = 2
                                section.sectionFrame.Parent.Parent.Parent["Left"].ZIndex = -2
                                Dropdownn.ZIndex = 2
                            end 
                        end
                    --
                    window.currentContent.dropdown = dropdown
                    --
                else

                    dropdown.open = not dropdown.open
                    dropdown.arrow.Rotation = 180
                    --
                    for i,v in pairs(dropdown.holder.drawings) do
                        v:Destroy()
                    end
                    --
                    dropdown.holder.drawings = {}
                    dropdown.holder.buttons = {}
                    --
                    window.currentContent.dropdown = nil


                end
            end
        end)
      
        section.frame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)

        return dropdown
    end
  
    function sections:Multibox(info)

        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title
        local options = info.options or info.Options or {"1", "2", "3"}
        local def = info.def or info.Def or info.default or info.Default or {options[1]}
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
        local min = info.min or info.Min or info.minimum or info.Minimum or 0
        local sizematter = info.sizematter or info.Sizematter or 7
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local multibox = {listframe = nil,uilist = nil, arrow = nil, open = false, current = def, options = options, holder = {buttons = {}, drawings = {}}, axis = section.currentAxis,inFrame = true}
        --
        local Dropdownn = Instance.new("Frame")
        local DropdownnFrame = Instance.new("Frame")
        local dropdown_value = Instance.new("TextLabel")
        local Arrow = Instance.new("ImageLabel")
        local Trigger = Instance.new("TextButton")
        --
        local str = Instance.new("UIStroke")
        str.Thickness = 1
        str.Color = Color3.fromRGB(48,48,48)
        str.Enabled = true
        --
     
        do
            --
            --
            if name then

                local TextLabel = Instance.new("TextLabel")
                
                --Properties:
                
                Dropdownn.Name = "Dropdownn"
                Dropdownn.Parent = section.sectionFrame
                Dropdownn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Dropdownn.BackgroundTransparency = 2.000
                Dropdownn.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Dropdownn.BorderSizePixel = 0
                Dropdownn.Position = UDim2.new(0, 0, 0.545454562, 0)
                Dropdownn.Size = UDim2.new(0, 220, 0, 42)
                Dropdownn.ZIndex = -2
                
                local ff = Instance.new("Folder",Dropdownn)
                ff.Name = "ff"
    
                TextLabel.Parent = Dropdownn
                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.BackgroundTransparency = 1.000
                TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TextLabel.BorderSizePixel = 0
                TextLabel.Position = UDim2.new(0.118181817, 0, 0.0700000003, -8)
                TextLabel.Size = UDim2.new(0, 124, 0, 26)
                TextLabel.FontFace = library.font
                TextLabel.Text = name
                TextLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
                TextLabel.TextSize = 9
                TextLabel.TextXAlignment = Enum.TextXAlignment.Left
                
                library.objects[TextLabel] = true
    
                DropdownnFrame.Name = "DropdownnFrame"
                DropdownnFrame.Parent = Dropdownn
                DropdownnFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                DropdownnFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                DropdownnFrame.BorderSizePixel = 2
                DropdownnFrame.Position = UDim2.new(0.118181542, 0, 0.450547907, 0)
                DropdownnFrame.Size = UDim2.new(0, 165, 0, 19)
                DropdownnFrame.ZIndex = 100
                
                library.objects[DropdownnFrame] = true
    
                str.Parent = DropdownnFrame
    
                dropdown_value.Name = "value"
                dropdown_value.Parent = DropdownnFrame
                dropdown_value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                dropdown_value.BackgroundTransparency = 1.000
                dropdown_value.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdown_value.BorderSizePixel = 0
                dropdown_value.Position = UDim2.new(0.0484848469, 0, 0, 0)
                dropdown_value.Size = UDim2.new(0, 134, 0, 19)
                dropdown_value.FontFace = library.font
                dropdown_value.TextColor3 = Color3.fromRGB(180, 180, 180)
                dropdown_value.TextSize = 9.000
                dropdown_value.TextXAlignment = Enum.TextXAlignment.Left
                
                library.objects[dropdown_value] = true
    
                Arrow.Name = "Arrow"
                Arrow.Parent = DropdownnFrame
                Arrow.BackgroundColor3 = Color3.fromRGB(72, 72, 72)
                Arrow.BackgroundTransparency = 1.000
                Arrow.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Arrow.BorderSizePixel = 0
                Arrow.Position = UDim2.new(0.910000026, 0, 0.37, 0)
                Arrow.Size = UDim2.new(0, 8, 0, 6)
                Arrow.ZIndex = -1
                Arrow.Image = "http://www.roblox.com/asset/?id=18316323943"
                Arrow.ImageColor3 = Color3.fromRGB(116, 116, 116)
                multibox.arrow = Arrow
                multibox.arrow.Rotation = 180
    
                library.objects[Arrow] = true
            else
    
                --Properties:
                
                Dropdownn.Name = "Dropdownn"
                Dropdownn.Parent = section.sectionFrame
                Dropdownn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Dropdownn.BackgroundTransparency = 2.000
                Dropdownn.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Dropdownn.BorderSizePixel = 0
                Dropdownn.Position = UDim2.new(0, 0, 0.545454562, 0)
                Dropdownn.Size = UDim2.new(0, 220, 0, 25)
                Dropdownn.ZIndex = -2
    
    
                local ff = Instance.new("Folder",Dropdownn)
                ff.Name = "ff"
    
                DropdownnFrame.Name = "DropdownnFrame"
                DropdownnFrame.Parent = Dropdownn
                DropdownnFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                DropdownnFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                DropdownnFrame.BorderSizePixel = 2
                DropdownnFrame.Position = UDim2.new(0.118181817, 0, 0.0700000003, 2)
                DropdownnFrame.Size = UDim2.new(0, 165, 0, 19)
                DropdownnFrame.ZIndex = 100
                
                str.Parent = DropdownnFrame
    
                dropdown_value.Name = "value"
                dropdown_value.Parent = DropdownnFrame
                dropdown_value.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                dropdown_value.BackgroundTransparency = 1.000
                dropdown_value.BorderColor3 = Color3.fromRGB(0, 0, 0)
                dropdown_value.BorderSizePixel = 0
                dropdown_value.Position = UDim2.new(0.0484848469, 0, 0, 0)
                dropdown_value.Size = UDim2.new(0, 134, 0, 19)
                dropdown_value.FontFace = library.font
                dropdown_value.TextColor3 = Color3.fromRGB(180, 180, 180)
                dropdown_value.TextSize = 9.000
                dropdown_value.TextXAlignment = Enum.TextXAlignment.Left
                
        
    
                Arrow.Name = "Arrow"
                Arrow.Parent = DropdownnFrame
                Arrow.BackgroundColor3 = Color3.fromRGB(72, 72, 72)
                Arrow.BackgroundTransparency = 1.000
                Arrow.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Arrow.BorderSizePixel = 0
                Arrow.Position = UDim2.new(0.910000026, 0, 0.37, 0)
                Arrow.Size = UDim2.new(0, 8, 0, 6)
                Arrow.ZIndex = -1
                Arrow.Image = "http://www.roblox.com/asset/?id=18316323943"
                Arrow.ImageColor3 = Color3.fromRGB(116, 116, 116)
                multibox.arrow = Arrow
                multibox.arrow.Rotation = 180
    
                library.objects[DropdownnFrame] = true
                library.objects[dropdown_value] = true
                library.objects[Arrow] = true
            end
    
            
            Trigger.Name = "Trigger"
            Trigger.Parent = DropdownnFrame
            Trigger.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Trigger.BackgroundTransparency = 1.000
            Trigger.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Trigger.BorderSizePixel = 0
            Trigger.Size = UDim2.new(0, 166, 0, 19)
            Trigger.Font = Enum.Font.SourceSans
            Trigger.Text = ""
            Trigger.TextColor3 = Color3.fromRGB(0, 0, 0)
            Trigger.TextSize = 14.000
            --

            Trigger.MouseEnter:Connect(function()
        
                game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(170, 85, 235) }):Play()
    
            end)
    
            Trigger.MouseLeave:Connect(function()
            
                game:GetService("TweenService"):Create(str, TweenInfo.new(.35) , { Color = Color3.fromRGB(45, 45, 45) }):Play()
            
            end)

            --
            function multibox:Serialize(tbl)
                local str = ""
                --
                for i,v in pairs(tbl) do
                    str = str..v..", "
                end
                --
                return string.sub(str, 0, #str - 2)
            end
            --
            function multibox:Resort(tbl,original)
                local newtbl = {}
                --
                for i,v in pairs(original) do
                    if Find(tbl, v) then
                        newtbl[#newtbl + 1] = v
                    end
                end
                --
                return newtbl
            end
            --
            function multibox:Set(tbl)
                if typeof(tbl) == "table" then
                    multibox.current = tbl
                    --
                    local text = multibox:Serialize(multibox:Resort(multibox.current, multibox.options))
                    dropdown_value.Text = utility:WrapText(text, DropdownnFrame.Size.X.Scale - 28)
                end
            end
            --
            function multibox:Get()
                return multibox.current
            end
            --                            
            if #multibox.current == 2 then
                dropdown_value.Text = ""..multibox.current[1]..", "..multibox.current[2]
            elseif #multibox.current > 2 then
                dropdown_value.Text = ""..multibox.current[1]..", "..multibox.current[2]..", ..."
            elseif #multibox.current == 0 then
                dropdown_value.Text = "..."
            elseif #multibox.current == 1 then
                dropdown_value.Text = ""..multibox.current[1]
                   
            end
            --
        end

                library.began[#library.began + 1] = Trigger.InputBegan:Connect(function(Input)

            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then


                if not multibox.open then

                    window:CloseContent()
                    multibox.open = not multibox.open

                    multibox.arrow.Rotation = 0
                     --
                    local ListFrame = Instance.new("Frame")
                    local UIGradient3 = Instance.new("UIGradient")
                    local UIPadding = Instance.new("UIPadding")
                    local UIListLayout23 = Instance.new("UIListLayout")

                    --Properties:

                    ListFrame.Name = "ListFrame"
                    ListFrame.Parent = DropdownnFrame
                    ListFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    ListFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                    ListFrame.BorderSizePixel = 2
                    ListFrame.Position = UDim2.new(3.69910026e-07, 0, 1.27718151, 0)
                    ListFrame.Size = UDim2.new(0, 166, 0, 23)
                    ListFrame.Visible = true
                    ListFrame.ZIndex = 100
                    multibox.listframe = ListFrame
        
                    ListFrame.MouseEnter:Connect(function()
                        multibox.inFrame = true
                    end)
                    
                    ListFrame.MouseLeave:Connect(function()
                        multibox.inFrame = false
                    end)

                    multibox.holder.drawings[ListFrame] = ListFrame

                    local str = Instance.new("UIStroke",ListFrame)
                    str.Thickness = 1
                    str.Color = Color3.fromRGB(48,48,48)
                    str.Enabled = true

                    UIGradient3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.83, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 111, 111))}
                    UIGradient3.Rotation = 90
                    UIGradient3.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.00), NumberSequenceKeypoint.new(0.90, 0.00), NumberSequenceKeypoint.new(1.00, 0.00)}
                    UIGradient3.Parent = ListFrame

                    UIListLayout23.Parent = ListFrame
                    UIListLayout23.SortOrder = Enum.SortOrder.LayoutOrder
                    UIListLayout23.Padding = UDim.new(0.0149999997, 0)
                    multibox.uilist = UIListLayout23

                    for Index = 1, #multibox.options do
                    
                        local value1 = Instance.new("TextButton")
                        value1.Name = multibox.options[Index]
                        value1.Parent = ListFrame
                        value1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                        value1.BackgroundTransparency = 1.000
                        value1.BorderColor3 = Color3.fromRGB(0, 0, 0)
                        value1.BorderSizePixel = 0
                        value1.Size = UDim2.new(0, 167, 0, 19)
                        value1.FontFace = library.font
                        value1.Text = tostring("  "..multibox.options[Index])
                        value1.TextXAlignment = Enum.TextXAlignment.Left
                        value1.TextSize = 9.000
                        value1.TextColor3 = Color3.fromRGB(140, 140, 140)

                        if table.find(def,tostring(multibox.options[Index])) then
                        value1.TextColor3 = Color3.fromRGB(170, 85, 235)
                        value1.Text = tostring("   "..multibox.options[Index])
                        end

                        
                        --
                        multibox.holder.buttons[#multibox.holder.buttons + 1] = {value1, tostring(multibox.options[Index])}
                        --

                        
                    end

                    for index, tablee in pairs(multibox.holder.buttons) do 
                        library.began[#library.began + 1] = tablee[1].InputBegan:Connect(function(Input)
                            if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible and multibox.open then
                            
                                      if not table.find(def,tostring(tablee[2])) then
                                      
                                        table.insert(def,tostring(tablee[2]))
                                        multibox.current = def
                                        callback(multibox.current)
                                        tablee[1].Text = "   "..tablee[2]
                                        game:GetService("TweenService"):Create(tablee[1], TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(170, 85, 235)}):Play()  
                                
                                        if #multibox.current == 2 then
                                            dropdown_value.Text = ""..multibox.current[1]..", "..multibox.current[2]
                                        elseif #multibox.current > 2 then
                                            dropdown_value.Text = ""..multibox.current[1]..", "..multibox.current[2]..", ..."
                                        elseif #multibox.current == 0 then
                                            dropdown_value.Text = "..."
                                        elseif #multibox.current == 1 then
                                            dropdown_value.Text = ""..multibox.current[1]
                                               
                                        end

                                      else

                                        tablee[1].Text = "  "..string.gsub(tablee[1].Text," ","")
                                        game:GetService("TweenService"):Create(tablee[1], TweenInfo.new(.35) , { TextColor3 = Color3.fromRGB(140, 140, 140)}):Play()
                                        local index = table.find(def,tablee[2])
                                        table.remove(def,index)
                                        multibox.current = def
                                        callback(multibox.current)
                                     
                                        if #multibox.current == 2 then
                                            dropdown_value.Text = ""..multibox.current[1]..", "..multibox.current[2]
                                        elseif #multibox.current > 2 then
                                            dropdown_value.Text = ""..multibox.current[1]..", "..multibox.current[2]..", ..."
                                        elseif #multibox.current == 0 then
                                            dropdown_value.Text = "..."
                                        elseif #multibox.current == 1 then
                                            dropdown_value.Text = ""..multibox.current[1]
                                               
                                        end
            
                                  
            
                                        end

                                      end
                                

                        end)
                    end

                    UIPadding.Parent = ListFrame
                    UIPadding.PaddingTop = UDim.new(0, 2)



                    

                    --
                    if section.frame.Parent:FindFirstChild("MultiSButtons") == nil then
                    if tostring(section.side) == "Left" then
                        section.sectionFrame.ZIndex = 2
                        section.sectionFrame.Parent.Parent["Right"].ZIndex = -2
                        section.sectionFrame.Parent.Parent["Left"].ZIndex = 2
                        Dropdownn.ZIndex = 2
                        else
                        section.sectionFrame.ZIndex = 2
                        section.sectionFrame.Parent.Parent["Right"].ZIndex = 2
                        section.sectionFrame.Parent.Parent["Left"].ZIndex = -2
                        Dropdownn.ZIndex = 2
                    end
                    else
                        if tostring(section.side) == "Left" then
                            section.sectionFrame.ZIndex = 2
                            section.sectionFrame.Parent.Parent.Parent["Right"].ZIndex = -2
                            section.sectionFrame.Parent.Parent.ZIndex = 2
                            Dropdownn.ZIndex = 2
                            else
                            section.sectionFrame.ZIndex = 2
                            section.sectionFrame.Parent.Parent.ZIndex = 2
                            section.sectionFrame.Parent.Parent.Parent["Left"].ZIndex = -2
                            Dropdownn.ZIndex = 2
                        end 
                    end
                    --
                    window.currentContent.multibox = multibox
                
                    ListFrame.Size = UDim2.new(0, 166,0,multibox.uilist.AbsoluteContentSize.Y + 7)
                    --
                else

                    multibox.open = not multibox.open
                    multibox.arrow.Rotation = 180
                    --
                    for i,v in pairs(multibox.holder.drawings) do
                        v:Destroy()
                    end
                    --
                    multibox.holder.drawings = {}
                    multibox.holder.buttons = {}
                    --
                    window.currentContent.multibox = nil


                end
            end
            if multibox.listframe and multibox.uilist then
            multibox.listframe.Size = UDim2.new(0, 166,0,multibox.uilist.AbsoluteContentSize.Y + 7)
            end
        end)

      if section.frame.Parent:FindFirstChild("MultiSButtons") == nil then
        section.frame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 7)
      end

 	--
        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = multibox
        end
        --
        return multibox
    end

   --
    function sections:Slider(info)
        --
        local info = info or {}
        local name = info.name or info.Name or info.title or info.Title
        local def = info.def or info.Def or info.default or info.Default or 10
        local min = info.min or info.Min or info.minimum or info.Minimum or 0
        local max = info.max or info.Max or info.maximum or info.Maximum or 100
        local maxtext = info.maximumtext or info.Maximumtext or info.maximumText or info.MaximumText or max
        local sub = info.suffix or info.Suffix or info.ending or info.Ending or info.prefix or info.Prefix or info.measurement or info.Measurement or ""
        local disable = info.disable or info.Disable or info.disabled or info.disabled or false
        local decimals = info.decimals or info.Decimals or 1
        decimals = 1 / decimals
        local pointer = info.pointer or info.Pointer or info.flag or info.Flag or nil
        local callback = info.callback or info.callBack or info.Callback or info.CallBack or function()end
        def = math.clamp(def, min, max)
        --
        local window = self.window
        local page = self.page
        local section = self
        --
        local slider = {min = min, max = max, Disabled = false, sub = sub, decimals = decimals, axis = section.currentAxis, current = -99999, holding = false}
        --
 
  

        
        if name then

 	local TextLabel = Instance.new("TextLabel")
        local Display = Instance.new("TextLabel")
        local Slider = Instance.new("Frame")
        local SliderFrame = Instance.new("Frame")
        local Fill = Instance.new("Frame")
        local Trigger = Instance.new("TextButton")
       
            Slider.Name = "Slider"
            Slider.Parent = section.sectionFrame
            Slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Slider.BackgroundTransparency = 2.000
            Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Slider.BorderSizePixel = 0
            Slider.Position = UDim2.new(0, 0, 0.976744175, 0)
            Slider.Size = UDim2.new(0, 220, 0, 28)

            SliderFrame.Name = "SliderFrame"
            SliderFrame.Parent = Slider
            SliderFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            SliderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SliderFrame.BorderSizePixel = 2
            SliderFrame.Position = UDim2.new(0.118181542, 0, 0.540547907, 2)
            SliderFrame.Size = UDim2.new(0, 165, 0, 8)
            library.objects[SliderFrame] = true

            Fill.Name = "Fill"
            Fill.Parent = SliderFrame
            Fill.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
            Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Fill.BorderSizePixel = 0
            Fill.Size = UDim2.new(0, 0, 0, 8)
            library.objects[Fill] = true

            Trigger.Name = "Trigger"
            Trigger.Parent = SliderFrame
            Trigger.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Trigger.BackgroundTransparency = 1.000
            Trigger.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Trigger.BorderSizePixel = 0
            Trigger.Position = UDim2.new(0, 0, -0.161560059, 0)
            Trigger.Size = UDim2.new(0, 167, 0, 9)
            Trigger.Font = Enum.Font.SourceSans
            Trigger.Text = ""
            Trigger.TextColor3 = Color3.fromRGB(0, 0, 0)
            Trigger.TextSize = 14.000

            TextLabel.Parent = Slider
            TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.BackgroundTransparency = 1.000
            TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
            TextLabel.BorderSizePixel = 0
            TextLabel.Position = UDim2.new(0.118181817, 0, 0.0700000003, -5)
            TextLabel.Size = UDim2.new(0, 124, 0, 22)
            TextLabel.FontFace = library.font
            TextLabel.Text = name
            TextLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
            TextLabel.TextSize = 9.000
            TextLabel.TextXAlignment = Enum.TextXAlignment.Left
            library.objects[TextLabel] = true

            Display.Name = "Display"
            Display.Parent = Fill
            Display.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Display.BackgroundTransparency = 1.000
            Display.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Display.BorderSizePixel = 0
            Display.Position = UDim2.new(1, 0, 0, 4)
            Display.Size = UDim2.new(0, 0, 1, 0)
            Display.ZIndex = 100
            Display.FontFace = library.font
            Display.Text = "0"
            Display.TextColor3 = Color3.fromRGB(140, 140, 140)
            Display.TextSize = 9.000
            Display.TextStrokeTransparency = 0.730
            library.objects[Display] = true
		 section.sectionFrame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 11)
	
            local str = Instance.new("UIStroke",SliderFrame)
            str.Thickness = 1
            str.Color = Color3.fromRGB(48,48,48)
            str.Enabled = true
            library.objects[str] = true

    
            --
            function slider:Set(value)
                local oldval = slider.current
                --
                slider.current = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
                --
                if slider.current ~= oldval then
                    local disabledtext = disable and ((slider.current <= disable[2] or slider.current >= disable[3]) and disable[1])
                    local percent = 1 - ((slider.max - slider.current) / (slider.max - slider.min))
                    print(percent)
                    Display.Text = disabledtext or (slider.current..slider.sub) -- "/"..maxtext..slider.sub
                    Fill.Size = UDim2.new(percent,0,0,8)
                    slider.Disabled = disabledtext ~= nil and disabledtext ~= false
                    callback(slider.current)
                end
            end
            --
            function slider:Refresh()
                local mouseLocation = utility:MouseLocation()
                local percent;


                if (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset <= 1 and (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset >= 0 then
                Fill.Size = UDim2.new((mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset,0,0,8)
                percent = ((mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset)
                elseif (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset <= 0 then
                Fill.Size = UDim2.new(0,0,0,8)
                percent = 0
                elseif (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset >= 1 then
                Fill.Size = UDim2.new(1,0,0,8)
                percent = 1
                end

                warn(percent)

                local value = math.round((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                value = math.clamp(value, slider.min, slider.max)
                slider:Set(value)
            end
            --
            function slider:Get()
                return slider.current
            end
              --
            slider:Set(def)
             
            --

	local slideractive = false
   
            --
            library.began[#library.began + 1] = Trigger.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
                    slider.holding = true
		slideractive = true
                         function activateSlider()

	    slideractive = true
            while slideractive do
                slider:Refresh()
                task.wait()
            end
            
        end
				activateSlider()
                end
            end)
            --
            library.ended[#library.ended + 1] = uis.InputEnded:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and slider.holding and not window.isVisible then
                    slider.holding = false
				slideractive = false
                end
            end)
            --  
        
        --
        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = slider
        end
        --
        return slider
        else

        local Display = Instance.new("TextLabel")
        local Slider = Instance.new("Frame")
        local SliderFrame = Instance.new("Frame")
        local Fill = Instance.new("Frame")
        local Trigger = Instance.new("TextButton")


            Slider.Name = "Slider"
            Slider.Parent = section.sectionFrame
            Slider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Slider.BackgroundTransparency = 2.000
            Slider.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Slider.BorderSizePixel = 0
            Slider.Position = UDim2.new(0, 0, 1.19534886, 0)
            Slider.Size = UDim2.new(0, 220, 0, 16)

            SliderFrame.Name = "SliderFrame"
            SliderFrame.Parent = Slider
            SliderFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            SliderFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            SliderFrame.BorderSizePixel = 2
            SliderFrame.Position = UDim2.new(0.118181542, 0, 0.400000006, -2)
            SliderFrame.Size = UDim2.new(0, 165, 0, 8)
            library.objects[SliderFrame] = true

            Fill.Name = "Fill"
            Fill.Parent = SliderFrame
            Fill.BackgroundColor3 = Color3.fromRGB(170, 85, 235)
            Fill.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Fill.BorderSizePixel = 0
            Fill.Size = UDim2.new(0, 0, 0, 8)
           library.objects[Fill] = true

            Trigger.Name = "Trigger"
            Trigger.Parent = SliderFrame
            Trigger.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Trigger.BackgroundTransparency = 1.000
            Trigger.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Trigger.BorderSizePixel = 0
            Trigger.Position = UDim2.new(0, 0, -0.161560059, 0)
            Trigger.Size = UDim2.new(0, 167, 0, 9)
            Trigger.Font = Enum.Font.SourceSans
            Trigger.Text = ""
            Trigger.TextColor3 = Color3.fromRGB(0, 0, 0)
            Trigger.TextSize = 14.000

            Display.Name = "Display"
            Display.Name = "Display"
            Display.Parent = Fill
            Display.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Display.BackgroundTransparency = 1.000
            Display.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Display.BorderSizePixel = 0
            Display.Position = UDim2.new(1, 0, 0, 4)
            Display.Size = UDim2.new(0, 0, 1, 0)
            Display.ZIndex = 100
            Display.FontFace = library.font
            Display.Text = "0"
            Display.TextColor3 = Color3.fromRGB(140, 140, 140)
            Display.TextSize = 9.000
            Display.TextStrokeTransparency = 0.730
            library.objects[Display] = true
 section.sectionFrame.Size = UDim2.new(0, 230, 0, section.UIListLayout.AbsoluteContentSize.Y + 11)
	
            local str = Instance.new("UIStroke",SliderFrame)
            str.Thickness = 1
            str.Color = Color3.fromRGB(48,48,48)
            str.Enabled = true
             library.objects[str] = true

            
            --
            function slider:Set(value)
                local oldval = slider.current
                --
                slider.current = math.clamp(math.round(value * slider.decimals) / slider.decimals, slider.min, slider.max)
                --
                if slider.current ~= oldval then
                    local disabledtext = disable and ((slider.current <= disable[2] or slider.current >= disable[3]) and disable[1])
                    local percent = 1 - ((slider.max - slider.current) / (slider.max - slider.min))
                    print(percent)
                    Display.Text = disabledtext or (slider.current..slider.sub) -- "/"..maxtext..slider.sub
                    Fill.Size = UDim2.new(percent,0,0,8)
                    slider.Disabled = disabledtext ~= nil and disabledtext ~= false
                    callback(slider.current)
                end
            end
            --
            function slider:Refresh()
                local mouseLocation = utility:MouseLocation()
                local percent;


                if (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset <= 1 and (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset >= 0 then
                Fill.Size = UDim2.new((mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset,0,0,8)
                percent = ((mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset)
                elseif (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset <= 0 then
                Fill.Size = UDim2.new(0,0,0,8)
                percent = 0
                elseif (mouseLocation.X - Trigger.AbsolutePosition.X) / SliderFrame.Size.X.Offset >= 1 then
                Fill.Size = UDim2.new(1,0,0,8)
                percent = 1
                end

                warn(percent)

                local value = math.round((slider.min + (slider.max - slider.min) * percent) * slider.decimals) / slider.decimals
                value = math.clamp(value, slider.min, slider.max)
                slider:Set(value)
            end
            --
            function slider:Get()
                return slider.current
            end
              --
            slider:Set(def)
             
            --
local slideractive = false
   
            --
            library.began[#library.began + 1] = Trigger.InputBegan:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and not window.isVisible then
                    slider.holding = true
		slideractive = true
                         function activateSlider()

	    slideractive = true
            while slideractive do
                slider:Refresh()
                task.wait()
            end
            
        end
				activateSlider()
                end
            end)
            --
            library.ended[#library.ended + 1] = uis.InputEnded:Connect(function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 and slider.holding and not window.isVisible then
                    slider.holding = false
				slideractive = false
                end
            end)
            --  
        
        --
        if pointer and tostring(pointer) ~= "" and tostring(pointer) ~= " " and not library.pointers[tostring(pointer)] then
            library.pointers[tostring(pointer)] = slider
        end
        --
        return slider
        end
       
    end

end

return library, utility, library.pointers, theme
